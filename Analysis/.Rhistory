M <- matrix(rnorm(36), 3, 12, dimnames = list(c('x', 'y', 'z'),
rep(LETTERS[1:4], 3)))
# Force 4-tuples to be convex in planes so that quads3d works.
for (i in c(1, 5, 9)) {
quad <- as.data.frame(M[, i + 0:3])
coeffs <- runif(2, 0, 3)
if (mean(coeffs) < 1) coeffs <- coeffs + 1 - mean(coeffs)
quad$C <- with(quad, coeffs[1]*(B - A) + coeffs[2]*(D - A) + A)
M[, i + 0:3] <- as.matrix(quad)
}
open3d()
M <- t(M)
shift <- matrix(c(-3, 3, 0), 12, 3, byrow = TRUE)
points3d(M)
lines3d(M + shift)
segments3d(M + 2*shift)
triangles3d(M + 3*shift, col = 'red')
quads3d(M + 4*shift, col = 'green')
text3d(M + 5*shift, texts = 1:12)
shift <- outer(0:5, shift[1, ])
shift[, 1] <- shift[, 1] + 3
text3d(shift,
texts = c('points3d', 'lines3d', 'segments3d',
'triangles3d', 'quads3d', 'text3d'),
adj = 0)
rgl.bringtotop()
?segments3d
rgl.material(lwd = 10)
procrustes.var.plot(PCAante$shapes$shapes.comp1$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC1minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 1, magnitude = 1, gridPar = GP, lwd = 10, line_antialias = TRUE )
rgl.material(lwd = 10)
rgl.material(lwd = 10, size = 10)
?material3d
material3d(lwd = 10, size = 10)
procrustes.var.plot(PCAante$shapes$shapes.comp1$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC1minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 1, magnitude = 1, gridPar = GP, lwd = 10, line_antialias = TRUE )
procrustes.var.plot(PCAante$shapes$shapes.comp1$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC1minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 1, magnitude = 1, rgl:segments3d(lwd=10))
procrustes.var.plot(PCAante$shapes$shapes.comp1$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC1minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 1, magnitude = 1, segments3d(lwd=10))
rgl:material3d(lwd = 10, size = 10)
procrustes.var.plot(PCAante$shapes$shapes.comp1$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC1minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 1, magnitude = 1, segments3d(lwd=10))
procrustes.var.plot(PCAante$shapes$shapes.comp1$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC1minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 1, magnitude = 1, rgl:segments3d(lwd=10))
procrustes.var.plot(PCAante$shapes$shapes.comp1$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC1minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 1, magnitude = 1, rgl::segments3d(lwd=10))
?segments3d
procrustes.var.plot(PCAante$shapes$shapes.comp1$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC1minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 1, magnitude = 1)
procrustes.var.plot(PCAante$shapes$shapes.comp1$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC1minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 1, magnitude = 1)
segments3d(lwd = 10, size = 10)
p <- procrustes.var.plot(PCAante$shapes$shapes.comp1$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC1minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 1, magnitude = 1)
segments3d(p, lwd = 10, size = 10)
p <- procrustes.var.plot(PCAante$shapes$shapes.comp1$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC1minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 1, magnitude = 1)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
rgl.snapshot("C:/Users/pietro/Desktop/Pietro/Notes/AntechinusShapeVariation_Viacavaetal_submission/PC1minmax", fmt = "png")
p <- procrustes.var.plot(PCAante$shapes$shapes.comp1$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC1minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 1, magnitude = 1)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
rgl.snapshot("C:/Users/pietro/Desktop/Pietro/Notes/AntechinusShapeVariation_Viacavaetal_submission/PC1minmaxlateral", fmt = "png")
p <- procrustes.var.plot(PCAante$shapes$shapes.comp1$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC1minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 1, magnitude = 1)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
rgl.viewpoint(180, 0, fov = 0, zoom = 0.5)
rgl.viewpoint(180, 0, fov = 0, zoom = 0.5)
rgl.viewpoint(180, 90, fov = 0, zoom = 0.5)
rgl.viewpoint(180, 180, fov = 0, zoom = 0.5)
rgl.viewpoint(180, 180, fov = 0, zoom = 0.5)
rgl.viewpoint(180, 90, fov = 0, zoom = 0.5)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
rgl.viewpoint(180, -0, fov = 0, zoom = 0.5)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
rgl.viewpoint(180, -180, fov = 0, zoom = 0.5)
rgl.viewpoint(180, -180, fov = 0, zoom = 0.5)
rgl.viewpoint(90, -180, fov = 0, zoom = 0.5)
rgl.viewpoint(0, -180, fov = 0, zoom = 0.5)
rgl.viewpoint(0, 0, fov = 0, zoom = 0.5)
rgl.viewpoint(0, 0, fov = 0, zoom = 0.5)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
rgl.viewpoint(0, 0, fov = 0, zoom = 0.5)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
rgl.viewpoint(0, 0, fov = 0, zoom = 0.5)
p <- procrustes.var.plot(PCAante$shapes$shapes.comp1$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC1minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 0.8, magnitude = 1)
p <- procrustes.var.plot(PCAante$shapes$shapes.comp1$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC1minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 0.5, magnitude = 1)
p <- procrustes.var.plot(PCAante$shapes$shapes.comp1$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC1minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 0.75, magnitude = 1)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
rgl.viewpoint(0, 0, fov = 0, zoom = 0.5)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
rgl.viewpoint(0, 0, fov = 0, zoom = 0.5)
rgl.viewpoint(180, 0, fov = 0, zoom = 0.5)
rgl.viewpoint(0, 0, fov = 0, zoom = 0.5)
rgl.viewpoint(0, 180, fov = 0, zoom = 0.5)
rgl.viewpoint(0, 0, fov = 0, zoom = 0.5)
rgl.viewpoint(0, 180, fov = 0, zoom = 0.5)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
rgl.viewpoint(180, 0, fov = 0, zoom = 0.5)
rgl.viewpoint(180, -180, fov = 0, zoom = 0.5)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
rgl.viewpoint(180, 0, fov = 0, zoom = 0.5)
rgl.viewpoint(180, -150, fov = 0, zoom = 0.5)
rgl.viewpoint(180, 0, fov = 0, zoom = 0.5)
rgl.viewpoint(90, 0, fov = 0, zoom = 0.5)
rgl.viewpoint(-90, 0, fov = 0, zoom = 0.5)
rgl.viewpoint(0, 0, fov = 0, zoom = 0.5)
rgl.viewpoint(1800, 0, fov = 0, zoom = 0.5)
rgl.viewpoint(180, 0, fov = 0, zoom = 0.5)
?rgl.viewpoint
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
rgl.viewpoint(-180, 0, fov = 0, zoom = 0.5)
rgl.viewpoint(180, 0, fov = 0, zoom = 0.5)
rgl.viewpoint(0, -90, fov = 0, zoom = 0.5)
rgl.viewpoint(90, -90, fov = 0, zoom = 0.5)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
rgl.viewpoint(180, 90, fov = 0, zoom = 0.5)
rgl.viewpoint(180, 180, fov = 0, zoom = 0.5)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
rgl.viewpoint(180, 0, fov = 0, zoom = 0.5)
rgl.viewpoint(180, 90, fov = 0, zoom = 0.5)
rgl.viewpoint(180, 180, fov = 0, zoom = 0.5)
rgl.viewpoint(180, -180, fov = 0, zoom = 0.5)
rgl.viewpoint(180, 90, fov = 0, zoom = 0.5)
rgl.viewpoint(-90, 90, fov = 0, zoom = 0.5)
rgl.viewpoint(-180, 90, fov = 0, zoom = 0.5)
rgl.viewpoint(180, 90, fov = 0, zoom = 0.5)
rgl.viewpoint(90, 90, fov = 0, zoom = 0.5)
rgl.viewpoint(-90, 90, fov = 0, zoom = 0.5)
rgl.viewpoint(-90, -90, fov = 0, zoom = 0.5)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
rgl.viewpoint(180, -0, fov = 0, zoom = 0.5)
rgl.viewpoint(180, 90, fov = 0, zoom = 0.5)
rgl.viewpoint(-180, 90, fov = 0, zoom = 0.5)
rgl.viewpoint(-180, 0, fov = 0, zoom = 0.5)
rgl.viewpoint(-180, -900, fov = 0, zoom = 0.5)
rgl.viewpoint(-180, -90, fov = 0, zoom = 0.5)
rgl.viewpoint(-90, -90, fov = 0, zoom = 0.5)
rgl.viewpoint(0, -90, fov = 0, zoom = 0.5)
rgl.viewpoint(0, 90, fov = 0, zoom = 0.5)
rgl.viewpoint(0, -90, fov = 0, zoom = 0.5)
rgl.viewpoint(0, 90, fov = 0, zoom = 0.5)
rgl.viewpoint(0, 0, fov = 0, zoom = 0.5)
rgl.viewpoint(0, 0, fov = 0, zoom = 0.5)
rgl.snapshot("C:/Users/pietro/Desktop/Pietro/Notes/AntechinusShapeVariation_Viacavaetal_submission/PC1minmaxventral", fmt = "png")
p <- procrustes.var.plot(PCAante$shapes$shapes.comp1$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC1minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 0.75, magnitude = 1)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
rgl.snapshot("C:/Users/pietro/Desktop/Pietro/Notes/AntechinusShapeVariation_Viacavaetal_submission/PC1minmaxlateral", fmt = "png")
rgl.viewpoint(0, 0, fov = 0, zoom = 0.5)
rgl.snapshot("C:/Users/pietro/Desktop/Pietro/Notes/AntechinusShapeVariation_Viacavaetal_submission/PC1minmaxventral", fmt = "png")
mshapePC2minmax<-coordinates.difference(PCAante$shapes$shapes.comp2$min,PCAante$shapes$shapes.comp2$max, type = "spherical")
procrustes.var.plot(PCAante$shapes$shapes.comp2$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC2minmax[[1]][,"radius"], col.range = c(0, 0.015), pt.size = 0.5, magnitude = 1)
min(mshapePC1minmax[[1]][,"radius"])
max(mshapePC1minmax[[1]][,"radius"])
mshapePC2minmax<-coordinates.difference(PCAante$shapes$shapes.comp2$min,PCAante$shapes$shapes.comp2$max, type = "spherical")
procrustes.var.plot(PCAante$shapes$shapes.comp2$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC2minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 0.5, magnitude = 1)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
rgl.snapshot("C:/Users/pietro/Desktop/Pietro/Notes/AntechinusShapeVariation_Viacavaetal_submission/PC2minmaxlateral", fmt = "png")
procrustes.var.plot(PCAante$shapes$shapes.comp2$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC2minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 0.75, magnitude = 1)
procrustes.var.plot(PCAante$shapes$shapes.comp2$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC2minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 0.75, magnitude = 1)
procrustes.var.plot(PCAante$shapes$shapes.comp2$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC2minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 0.75, magnitude = 1)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
rgl.snapshot("C:/Users/pietro/Desktop/Pietro/Notes/AntechinusShapeVariation_Viacavaetal_submission/PC2minmaxlateral", fmt = "png")
rgl.viewpoint(0, 0, fov = 0, zoom = 0.5)
rgl.snapshot("C:/Users/pietro/Desktop/Pietro/Notes/AntechinusShapeVariation_Viacavaetal_submission/PC2minmaxventral", fmt = "png")
plotRefToTarget(mshapenorth, mshapesubtropicus, method="vector", gridPars=gridPar(pt.size=0.5))
plotRefToTarget(PCAante$shapes$shapes.comp1$min, PCAante$shapes$shapes.comp1$max, method="vector", gridPars=gridPar(pt.size=0.5))
plotRefToTarget(PCAante$shapes$shapes.comp1$min, PCAante$shapes$shapes.comp1$max, method="vector", gridPars=gridPar(pt.size=0.5, lwd = 5))
?plotRefToTarget
gridPar()
?gridpar
plotRefToTarget(PCAante$shapes$shapes.comp1$min, PCAante$shapes$shapes.comp1$max, method="vector", gridPars=gridPar(pt.size=0.5, link.lwd = 5))
plotRefToTarget(PCAante$shapes$shapes.comp1$min, PCAante$shapes$shapes.comp1$max, method="vector", gridPars=gridPar(pt.size=0.5, tar.link.lwd = 10))
plotRefToTarget(PCAante$shapes$shapes.comp1$min, PCAante$shapes$shapes.comp1$max, method="vector", gridPars=gridPar(pt.size=0.5, grid.lwd = 10))
# Two dimensional data
data(plethodon)
Y.gpa<-gpagen(plethodon$land)    #GPA-alignment
ref<-mshape(Y.gpa$coords)
plotRefToTarget(ref,Y.gpa$coords[,,39])
plotRefToTarget(ref,Y.gpa$coords[,,39], mag=2, outline=plethodon$outline)   #magnify by 2X
plotRefToTarget(ref,Y.gpa$coords[,,39], method="vector", mag=3)
plotRefToTarget(ref,Y.gpa$coords[,,39], method="points", outline=plethodon$outline)
plotRefToTarget(ref,Y.gpa$coords[,,39], method="vector", outline=plethodon$outline, mag=2.5)
plotRefToTarget(ref,Y.gpa$coords[,,39], gridPars=gridPar(pt.bg = "green", pt.size = 1),
method="vector",mag=3)
data(scallops)
Y.gpa<-gpagen(A=scallops$coorddata, curves=scallops$curvslide, surfaces=scallops$surfslide)
ref<-mshape(Y.gpa$coords)
plotRefToTarget(ref,Y.gpa$coords[,,1],method="points")
scallinks <- matrix(c(1,rep(2:16, each=2),1), nrow=16, byrow=TRUE)
plotRefToTarget(ref,Y.gpa$coords[,,1],gridPars=gridPar(tar.pt.bg = "blue", tar.link.col="blue",
# tar.link.lwd=2), method="points", links = scallinks)
tar.link.lwd=2), method="points", links = scallinks)
allom.plot <- plot(fit.sizepop, type = "regression", predictor = gdfantepop$Csize, reg.type = "PredLine")
A_reorderpop <- A_reorder[,,-c(which(antechinusdata$Population=="Unknown"))]
antechinusdatapop <- antechinusdata[-c(which(antechinusdata$Population=="Unknown")),]
antechinusdatapop <- droplevels(antechinusdatapop)
gpaallpop<-gpagen(A_reorderpop, curves = NULL, surfaces = NULL, PrinAxes = TRUE,
max.iter = NULL, ProcD = TRUE, Proj = TRUE, print.progress = TRUE)
rclim<- getData("worldclim",var="bio",res=10) #run in console
rclimpop <- rclim[[c(1,4,12,15)]]
names(rclimpop) <- c("Temp","TempSeas","Prec","PrecSeas")
lonspop <- antechinusdatapop$Longitude
latspop <- antechinusdatapop$Latitude
coordsgpspop <- data.frame(lonspop, latspop)
valuestemppop <- raster::extract(rclimpop,coordsgpspop)
dfwtemppop <- cbind.data.frame(coordsgpspop,valuestemppop)
dfwtemppop
antegps <- data.frame(antechinusdatapop$Latitude, antechinusdatapop$Longitude)
evariables <- c("el830", "el674", "el783", "el794")
retrieved.evariables <- intersect_points(antegps, evariables)
retrieved.evariables$distanceToPermanentWaterWeighted[is.na(retrieved.evariables$distanceToPermanentWaterWeighted)]<-0
retrieved.evariables$elevation[is.na(retrieved.evariables$elevation)]<-0
antechinusdatapop$distanceTowater <- retrieved.evariables$distanceToPermanentWaterWeighted
antechinusdatapop$elevation <- retrieved.evariables$elevation
antechinusdatapop$precseas <- retrieved.evariables$worldClimPrecipitationSeasonality
antechinusdatapop$tempseas <- retrieved.evariables$worldClimTemperatureSeasonality
gdfantepop <- geomorph.data.frame(coords = gpaallpop$coords, Csize = gpaallpop$Csize, Species = antechinusdatapop$Species, Population = antechinusdatapop$Population, ID = antechinusdatapop$ID, Sex = antechinusdatapop$Sex, Latitude = antechinusdatapop$Latitude, Longitude = antechinusdatapop$Longitude, Altitude = antechinusdatapop$Altitude, Dat_coll = antechinusdatapop$Date.collected, Collection = antechinusdatapop$Collection, ppworldclim = dfwtemppop$Prec, ppseasworldclim = dfwtemppop$PrecSeas, tempworldclim = dfwtemppop$Temp, tempseasworldclim = dfwtemppop$TempSeas, Age = antechinusdatapop$Age, doubt = antechinusdatapop$doubt, distanceTowater = antechinusdatapop$distanceTowater, elevation = antechinusdatapop$elevation, precseas = antechinusdatapop$precseas, tempseas = antechinusdatapop$tempseas)
fit.sizepop <- procD.lm(f1 = coords~Csize, data = gdfantepop, print.progress = FALSE)
fit.size.plotpop <- plotAllometry(fit.sizepop, size = gdfantepop$Csize, logsz = FALSE, method = "RegScore", pch = 19, col = as.numeric(gdfantepop$Population), cex = 3)
anova(fit.sizepop)
Populationpop <- gdfantepop$Population
Sexpop <- gdfantepop$Sex
dataallometryplotpop <- data.frame(fit.size.plotpop$size.var, fit.size.plotpop$RegScore, Populationpop, Sexpop)
plotallompop <- ggplot(dataallometryplotpop, aes(x=fit.size.plotpop.size.var, y=fit.size.plotpop.RegScore, colour = Populationpop, shape = Sexpop)) +
labs(x = "Centroid Size", y = "Shape Score") +
scale_color_manual(values = c("deeppink", "darkgoldenrod2", "darkgreen")) +
geom_point(size = 8, alpha = 0.8) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", axis.title.x = element_text(size = 25), axis.title.y = element_text(size = 25), axis.text = element_text(size = 20), legend.justification = "center")
plot(plotallompop)
plot(plotallompop)
allom.plot <- plot(fit.sizepop, type = "regression", predictor = gdfantepop$Csize, reg.type = "PredLine")
preds <- shape.predictor(fit.sizepop$GM$fitted, x= allom.plot$RegScore, Intercept = F, predmin = min(allom.plot$RegScore), predmax = max(allom.plot$RegScore))
plotRefToTarget(M, preds$predmin, mag = 3)
allomshapediff <- coordinates.difference(predshapesize$predmin, predshapesize$predmax, type = "spherical")
#shape changes associated with allometry
M<-mshape(gpaallpop$coords)
predshapesize <- shape.predictor(gpaallpop$coords, x=log(gpaallpop$Csize), Intercept = TRUE, predmin = min(log(gpaallpop$Csize)), predmax = max(log(gpaallpop$Csize)))
plotRefToTarget(M, predshapesize$predmax, mag=3)
allomshapediff <- coordinates.difference(predshapesize$predmin, predshapesize$predmax, type = "spherical")
procrustes.var.plot(predshapesize$predmin, predshapesize$predmax, col = list(grDevices::heat.colors, "black"), allomshapediff[[1]][,"radius"], col.range = c(0, 0.015), pt.size = 0.5)
predshapesize <- shape.predictor(gpaallpop$coords, x=gpaallpop$Csize, Intercept = TRUE, predmin = min(gpaallpop$Csize), predmax = max(gpaallpop$Csize))
M<-mshape(gpaallpop$coords)
predshapesize <- shape.predictor(gpaallpop$coords, x=gpaallpop$Csize, Intercept = TRUE, predmin = min(gpaallpop$Csize), predmax = max(gpaallpop$Csize))
allomshapediff <- coordinates.difference(predshapesize$predmin, predshapesize$predmax, type = "spherical")
procrustes.var.plot(predshapesize$predmin, predshapesize$predmax, col = list(grDevices::heat.colors, "black"), allomshapediff[[1]][,"radius"], col.range = c(0, 0.015), pt.size = 0.5)
min(allomshapediff[[1]][,"radius"])
max(allomshapediff[[1]][,"radius"])
procrustes.var.plot(predshapesize$predmin, predshapesize$predmax, col = list(grDevices::heat.colors, "black"), allomshapediff[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 0.5)
procrustes.var.plot(predshapesize$predmin, predshapesize$predmax, col = list(grDevices::heat.colors, "black"), allomshapediff[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 0.75, magnitude = 1)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
fit.size <- procD.lm(f1 = coords~Csize, data = gdfante, print.progress = FALSE)
main_residuals3D <- arrayspecs(fit.size$residuals, 412, 3)
allom_resplusconsensus <- main_residuals3D + array(gpaall$consensus,dim(main_residuals3D))
allom_resplusconsensuspop <- allom_resplusconsensus[,,-c(which(antechinusdata$Population=="?"))]
allom_resplusconsensuspop <- allom_resplusconsensus[,,-c(which(antechinusdata$Population=="?"))]
gparespop<-gpagen(allom_resplusconsensuspop, curves = NULL, surfaces = NULL, PrinAxes = TRUE,
max.iter = NULL, ProcD = TRUE, Proj = TRUE, print.progress = TRUE)
allom_resplusconsensuspop
fit.size <- procD.lm(f1 = coords~Csize, data = gdfante, print.progress = FALSE)
main_residuals3D <- arrayspecs(fit.size$residuals, 412, 3)
allom_resplusconsensus <- main_residuals3D + array(gpaall$consensus,dim(main_residuals3D))
allom_resplusconsensuspop <- allom_resplusconsensus[,,-c(which(antechinusdata$Population=="?"))]
allom_resplusconsensuspop
allom_resplusconsensus
allom_resplusconsensus <- main_residuals3D + array(gpaall$consensus,dim(main_residuals3D))
allom_resplusconsensuspop <- allom_resplusconsensus[,,-c(which(antechinusdata$Population=="?=Unknown"))]
allom_resplusconsensuspop
fit.size <- procD.lm(f1 = coords~Csize, data = gdfante, print.progress = FALSE)
main_residuals3D <- arrayspecs(fit.size$residuals, 412, 3)
allom_resplusconsensus <- main_residuals3D + array(gpaall$consensus,dim(main_residuals3D))
allom_resplusconsensuspop <- allom_resplusconsensus[,,-c(which(antechinusdata$Population=="Unknown"))]
allom_resplusconsensuspop
gparespop<-gpagen(allom_resplusconsensuspop, curves = NULL, surfaces = NULL, PrinAxes = TRUE,
max.iter = NULL, ProcD = TRUE, Proj = TRUE, print.progress = TRUE)
gdfresantepop <- geomorph.data.frame(coords = gparespop$coords, Csize = gparespop$Csize, Species = antechinusdatapop$Species, Population = antechinusdatapop$Population, ID = antechinusdatapop$ID, Sex = antechinusdatapop$Sex, Latitude = antechinusdatapop$Latitude, Longitude = antechinusdatapop$Longitude, Altitude = antechinusdatapop$Altitude, Dat_coll = antechinusdatapop$Date.collected, Collection = antechinusdatapop$Collection, ppworldclim = dfwtemppop$Prec, tempworldclim = dfwtemppop$Temp, Age = antechinusdatapop$Age, doubt = antechinusdatapop$doubt, distanceTowater = antechinusdatapop$distanceTowater, elevation = antechinusdatapop$elevation)
PCAresantepop <- gm.prcomp(gdfresantepop$coords)
summary(PCAresantepop)
Populationpop <- gdfantepop$Population
Sexpop <- gdfantepop$Sex
dataPCArespop <- data.frame(PCAresantepop$x[,1], PCAresantepop$x[,2], Populationpop, Sexpop)
plotPCArespop <- ggplot(dataPCArespop, aes(x=PCAresantepop.x...1., y=PCAresantepop.x...2., colour = Populationpop, shape = Sexpop)) +
labs(x = "PC 1 (14.74%)", y = "PC 2 (11.26%)") +
scale_color_manual(values = c("red", "blue", "darkgreen")) +
geom_point(size = 8, alpha = 0.8) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.text = element_text(size = 25), legend.title = element_text(size = 25), axis.title.x = element_text(size = 25), axis.title.y = element_text(size = 25), axis.text = element_text(size = 20), legend.justification = "center")
plot(plotPCArespop)
fitpopres <- procD.lm(coords~Population, data = gdfresantepop, iter = 999, effect.type = "F")
anova(fitpopres)
PWpopres <- pairwise(fitpopres, groups = gdfresantepop$Population)
PWpopres.sum <- summary(PWpopres, test.type = "dist", confidence = 0.95, stat.table = FALSE)
PWpopres.sum
disparitypopsres <- morphol.disparity(fitpopres, groups = ~ Population, data = gdfresantepop, iter = 999)
summary(disparitypopsres)
northrescoords <- gdfresantepop$coords[,,which(gdfresantepop$Population=="north")]
northrescoords
northrescoords <- gdfresantepop$coords[,,which(gdfresantepop$Population=="A. stuartii north")]
northrescoords
northrescoords <- gdfresantepop$coords[,,which(gdfresantepop$Population=="A. stuartii north")]
mshapenorthres <- mshape(northrescoords)
southrescoords <- gdfresantepop$coords[,,which(gdfresantepop$Population=="A. stuartii south")]
mshapesouthres <- mshape(southrescoords)
subtropicusrescoords <- gdfresantepop$coords[,,which(gdfresantepop$Population=="A. subtropicus")]
mshapesubtropicusres <- mshape(subtropicusrescoords)
northrescoords
mshapenorthres
mshapesouthres
subtropicusrescoords
mshaperessouthnorth <- coordinates.difference(mshapesouthres, mshapenorthres, type = "spherical")
mshaperesnorthsubtropicus <- coordinates.difference(mshapenorthres, mshapesubtropicusres, type = "spherical")
mshaperessouthsubtropicus <- coordinates.difference(mshapesouthres, mshapesubtropicusres, type = "spherical")
procrustes.var.plot(mshapesouthres, mshapenorthres, col = list(grDevices::heat.colors, "black"), pt.size = 0.5, col.val = mshaperessouthnorth[[1]][,"radius"])
procrustes.var.plot(mshapenorthres, mshapesubtropicusres, col = list(grDevices::heat.colors, "black"), pt.size = 0.5, col.val = mshaperesnorthsubtropicus[[1]][,"radius"])
northcoords <- gdfantepop$coords[,,which(gdfantepop$Population=="A. stuartii north")]
mshapenorth <- mshape(northcoords)
southcoords <- gdfantepop$coords[,,which(gdfantepop$Population=="A. stuartii south")]
mshapesouth <- mshape(southcoords)
subtropicuscoords <- gdfantepop$coords[,,which(gdfantepop$Population=="A. subtropicus")]
mshapesubtropicus <- mshape(subtropicuscoords)
mshapesouthnorth <- coordinates.difference(mshapesouth, mshapenorth, type = "spherical")
mshapenorthsubtropicus <- coordinates.difference(mshapenorth, mshapesubtropicus, type = "spherical")
mshapesouthsubtropicus <- coordinates.difference(mshapesouth, mshapesubtropicus, type = "spherical")
procrustes.var.plot(mshapesouth, mshapenorth, col = list(grDevices::heat.colors, "black"), pt.size = 0.5, col.val = mshapesouthnorth[[1]][,"radius"])
min(mshapesouthnorth[[1]][,"radius"])
max(mshapesouthnorth[[1]][,"radius"])
procrustes.var.plot(mshapesouth, mshapenorth, col = list(grDevices::heat.colors, "black"), pt.size = 0.5, col.val = mshapesouthnorth[[1]][,"radius"], col.range = c(0, 0.005), pt.size = 0.75, magnitude = 1)
procrustes.var.plot(mshapesouth, mshapenorth, col = list(grDevices::heat.colors, "black"), pt.size = 0.75, col.val = mshapesouthnorth[[1]][,"radius"], col.range = c(0, 0.005), magnitude = 1)
procrustes.var.plot(mshapesouth, mshapenorth, col = list(grDevices::heat.colors, "black"), pt.size = 0.75, col.val = mshapesouthnorth[[1]][,"radius"], col.range = c(0, 0.005), magnitude = 1)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
rgl.viewpoint(0, 0, fov = 0, zoom = 0.5)
min(mshapenorthsubtropicus[[1]][,"radius"])
max(mshapenorthsubtropicus[[1]][,"radius"])
procrustes.var.plot(mshapenorth, mshapesubtropicus, col = list(grDevices::heat.colors, "black"), pt.size = 0.75, col.val = mshapenorthsubtropicus[[1]][,"radius"], col.range = c(0, 0.005), magnitude = 1)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
max(mshapesouthsubtropicus[[1]][,"radius"])
procrustes.var.plot(mshapesouth, mshapesubtropicus, col = list(grDevices::heat.colors, "black"), pt.size = 0.75, col.val = mshapesouthsubtropicus[[1]][,"radius"], col.range = c(0, 0.005), magnitude = 1)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
procrustes.var.plot(mshapesouth, mshapenorth, col = list(grDevices::heat.colors, "black"), pt.size = 0.75, col.val = mshapesouthnorth[[1]][,"radius"], col.range = c(0, 0.01), magnitude = 1)
procrustes.var.plot(mshapenorth, mshapesubtropicus, col = list(grDevices::heat.colors, "black"), pt.size = 0.75, col.val = mshapenorthsubtropicus[[1]][,"radius"], col.range = c(0, 0.005), magnitude = 1)
procrustes.var.plot(mshapenorth, mshapesubtropicus, col = list(grDevices::heat.colors, "black"), pt.size = 0.75, col.val = mshapenorthsubtropicus[[1]][,"radius"], col.range = c(0, 0.01), magnitude = 1)
procrustes.var.plot(mshapesouth, mshapesubtropicus, col = list(grDevices::heat.colors, "black"), pt.size = 0.75, col.val = mshapesouthsubtropicus[[1]][,"radius"], col.range = c(0, 0.01), magnitude = 1)
procrustes.var.plot(mshapesouth, mshapenorth, col = list(grDevices::heat.colors, "black"), pt.size = 0.75, col.val = mshapesouthnorth[[1]][,"radius"], col.range = c(0, 0.01), magnitude = 1)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
rgl.snapshot("C:/Users/pietro/Desktop/Pietro/Notes/AntechinusShapeVariation_Viacavaetal_submission/southnorthlateral", fmt = "png")
rgl.viewpoint(0, 0, fov = 0, zoom = 0.5)
rgl.snapshot("C:/Users/pietro/Desktop/Pietro/Notes/AntechinusShapeVariation_Viacavaetal_submission/southnorthventral", fmt = "png")
procrustes.var.plot(mshapenorth, mshapesubtropicus, col = list(grDevices::heat.colors, "black"), pt.size = 0.75, col.val = mshapenorthsubtropicus[[1]][,"radius"], col.range = c(0, 0.01), magnitude = 1)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
rgl.snapshot("C:/Users/pietro/Desktop/Pietro/Notes/AntechinusShapeVariation_Viacavaetal_submission/northsubtropicuslateral", fmt = "png")
rgl.viewpoint(0, 0, fov = 0, zoom = 0.5)
rgl.snapshot("C:/Users/pietro/Desktop/Pietro/Notes/AntechinusShapeVariation_Viacavaetal_submission/northsubtropicusventral", fmt = "png")
procrustes.var.plot(mshapesouth, mshapesubtropicus, col = list(grDevices::heat.colors, "black"), pt.size = 0.75, col.val = mshapesouthsubtropicus[[1]][,"radius"], col.range = c(0, 0.01), magnitude = 1)
rgl.viewpoint(180, -90, fov = 0, zoom = 0.5)
rgl.snapshot("C:/Users/pietro/Desktop/Pietro/Notes/AntechinusShapeVariation_Viacavaetal_submission/southsubtropicuslateral", fmt = "png")
rgl.viewpoint(0, 0, fov = 0, zoom = 0.5)
rgl.snapshot("C:/Users/pietro/Desktop/Pietro/Notes/AntechinusShapeVariation_Viacavaetal_submission/southsubtropicusventral", fmt = "png")
knitr::opts_knit$set(root.dir = '../Viacavaetal_Antechinus/Data', echo = TRUE)
#load libraries
library(ggplot2)
library(digest)
library(rgl)
library(geomorph)
library(vegan) # vegan version 2.4-4
library(Morpho)
library(ape)
library(raster)
library(sp)
library(MASS)
library(RColorBrewer)
library(shapes)
library(ALA4R)
library(ggsignif)
library(ggpubr)
if(!require(devtools)) install.packages("devtools")
library(devtools)
devtools::install_github("TGuillerme/landvR")
library(landvR)
?procrustes.var.plot
#Import 3D coordinates from all specimens
coords.3D <- t (read.csv("C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/Antechinus_semiLMcoords.csv", header = TRUE, row.names = 1))
dim(coords.3D)
#Convert 2D metadata into a 3D array
A <- arrayspecs(coords.3D, 412, 3)
dim(A)
Ahead <- head(dimnames(A))[3]
#Load the classifier
antechinusdata <- read.csv("C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/Antechinus_data.csv", header=T)
dim(antechinusdata)
Data.species <- antechinusdata$Species
is.factor(Data.species) # check that it is a factor
#give museum ID row names to antechinus data
rownames(antechinusdata)<-antechinusdata$ID
####Rearrange coordinate names and classifier file names in the same order
names_array <- dimnames(A)[[3]]
names_classifier <- rownames(antechinusdata)
match(names_array, names_classifier)
A_reorder <- A[,,match(names_classifier, names_array)]
names_Areorder <- dimnames(A_reorder)[[3]]
match(names_Areorder, names_classifier)
#cleaning of juveniles, other species and one outlier
A_reorder <- A_reorder[,,-c(which(antechinusdata$Age=="Juvenile?"), which(antechinusdata$Population=="adustus?"), which(antechinusdata$Population=="agilis?"), which(antechinusdata$ID=="CM3642"))]
antechinusdata <- antechinusdata[-c(which(antechinusdata$Age=="Juvenile?"), which(antechinusdata$Population=="adustus?"), which(antechinusdata$Population=="agilis?"), which(antechinusdata$ID=="CM3642")),]
antechinusdata <- droplevels(antechinusdata)
gpaall<-gpagen(A_reorder, curves = NULL, surfaces = NULL, PrinAxes = TRUE,
max.iter = NULL, ProcD = TRUE, Proj = TRUE, print.progress = TRUE)
#include precipitation and temperature data from worldclim
rclim<- getData("worldclim",var="bio",res=10) #run in console
rclim <- rclim[[c(1,4,12,15)]]
names(rclim) <- c("Temp","TempSeas","Prec","PrecSeas")
lons <- antechinusdata$Longitude
lats <- antechinusdata$Latitude
coordsgps <- data.frame(lons, lats)
valuestemp <- raster::extract(rclim,coordsgps)
dfwtemp <- cbind.data.frame(coordsgps,valuestemp)
dfwtemp
antegps <- data.frame(antechinusdata$Latitude, antechinusdata$Longitude)
evariables <- c("el830", "el674", "el783", "el794")
retrieved.evariables <- intersect_points(antegps, evariables)
retrieved.evariables$distanceToPermanentWaterWeighted[is.na(retrieved.evariables$distanceToPermanentWaterWeighted)]<-0
retrieved.evariables$elevation[is.na(retrieved.evariables$elevation)]<-0
antechinusdata$distanceTowater <- retrieved.evariables$distanceToPermanentWaterWeighted
antechinusdata$elevation <- retrieved.evariables$elevation
antechinusdata$precseas <- retrieved.evariables$worldClimPrecipitationSeasonality
antechinusdata$tempseas <- retrieved.evariables$worldClimTemperatureSeasonality
#frame data for geomorph
gdfante <- geomorph.data.frame(coords = gpaall$coords, Csize = gpaall$Csize, Species = antechinusdata$Species, Population = antechinusdata$Population, ID = antechinusdata$ID, Sex = antechinusdata$Sex, Latitude = antechinusdata$Latitude, Longitude = antechinusdata$Longitude, Altitude = antechinusdata$Altitude, Dat_coll = antechinusdata$Date.collected, Collection = antechinusdata$Collection, ppworldclim = dfwtemp$Prec, ppseasworldclim = dfwtemp$PrecSeas, tempworldclim = dfwtemp$Temp, tempseasworldclim = dfwtemp$TempSeas, Age = antechinusdata$Age, doubt = antechinusdata$doubt, distanceTowater = antechinusdata$distanceTowater, elevation = antechinusdata$elevation, precseas = antechinusdata$precseas, tempseas = antechinusdata$tempseas)
PCAante <- gm.prcomp(gdfante$coords)
summary(PCAante)
Population <- gdfante$Population
Sex <- gdfante$Sex
ID <- gdfante$ID
Latitude <- gdfante$Latitude
dataPCA <- data.frame(PCAante$x[,1], PCAante$x[,2], Population, Sex, ID, Latitude, Population)
plotPCA <- ggplot(dataPCA, aes(x=-PCAante.x...1., y=PCAante.x...2., shape = Sex, colour = Population)) +
labs(x = "PC 1 (18.52%)", y = "PC 2 (9.95%)") +
scale_shape_manual(values = c(7, 12, 16, 17, 15),
labels = c( (expression(paste(italic("A. stuartii"), " neotype"))),
(expression(paste(italic("A. subtropicus"),  " holotype"))),
(expression(paste("Female"))),
(expression(paste("Male"))),
(expression(paste("Unknown"))))) +
scale_color_manual(values = c("darkgoldenrod2", "deeppink", "darkgreen", "#ced0ce"),  breaks = c("A. stuartii south", "A. stuartii north", "A. subtropicus", "Unknown"),
labels = c((expression(paste(italic("A. stuartii"), " south"))),
(expression(paste(italic("A. stuartii"), " north"))),
(expression(paste(italic("A. subtropicus")))),
(expression(paste("Unknown"))))) +
guides(color = guide_legend(order = 1),
shape = guide_legend(order = 2)) +
labs(colour = "", shape = "") +
geom_point(size = 8, alpha = 1, stroke = 3) +
theme_bw() +
theme(legend.text.align = 0, legend.text = element_text(size = 25), legend.title = element_text(size = 25), axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10), axis.title.y = element_text(size=25), axis.title.x = element_text(size=25))
plot(plotPCA)
plot(plotPCA)
mshapePC1minmax<-coordinates.difference(PCAante$shapes$shapes.comp1$min,PCAante$shapes$shapes.comp1$max, type = "spherical")
p <- procrustes.var.plot(PCAante$shapes$shapes.comp1$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC1minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 0.75, magnitude = 1)
p <- procrustes.var.plot(PCAante$shapes$shapes.comp1$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC1minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 0.75, magnitude = 1, lwd = 5)
p <- procrustes.var.plot(PCAante$shapes$shapes.comp1$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC1minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 0.75, magnitude = 1, lwd = 1)
p <- procrustes.var.plot(PCAante$shapes$shapes.comp1$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC1minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 0.75, magnitude = 1, lwd = 2)
p <- procrustes.var.plot(PCAante$shapes$shapes.comp1$min,PCAante$shapes$shapes.comp2$max, col = list(grDevices::heat.colors, "black"), col.val = mshapePC1minmax[[1]][,"radius"], col.range = c(0, 0.01), pt.size = 0.75, magnitude = 1, lwd = 0)
## Loading the geomorph dataset
require(geomorph)
data(plethodon)
# Performing the Procrustes superimposition
proc_super <- gpagen(plethodon$land, print.progress = FALSE)
## Getting the range of variation
variation <- variation.range(proc_super, return.ID = TRUE)
## Selecting the coordinates and the variation vector
M1 <- proc_super$coords[, , variation$min.max[1]]
M2 <- proc_super$coords[, , variation$min.max[2]]
var_val <- variation$range[, 1]
## Plot the variation
procrustes.var.plot(M1, M2)
## A colourful plot
procrustes.var.plot(M1, M2, col = list(grDevices::rainbow, "pink"), col.val = var_val,
pt.size = 2.5)
# Not run:
## Loading the scallops 3D data from geomorph
require(geomorph)
data(scallops)
## Procrustes superimposition
procrustes <- gpagen(scallops$coorddata)
## Getting the range of variation
variation <- variation.range(procrustes, return.ID = TRUE)
## Selecting the coordinates and the variation vector
M1 <- procrustes$coords[, , variation$min.max[1]]
M2 <- procrustes$coords[, , variation$min.max[2]]
var_val <- variation$range[, 1]
## Plot the variation in 3D
procrustes.var.plot(M1, M2, col.val = var_val, col = list(grDevices::heat.colors, "grey"))
## Selecting the coordinates and the variation vector
M1 <- procrustes$coords[, , variation$min.max[1]]
M2 <- procrustes$coords[, , variation$min.max[2]]
var_val <- variation$range[, 1]
## Plot the variation in 3D
procrustes.var.plot(M1, M2, col.val = var_val, col = list(grDevices::heat.colors, "grey"), lwd = 10)
## Selecting the coordinates and the variation vector
M1 <- procrustes$coords[, , variation$min.max[1]]
M2 <- procrustes$coords[, , variation$min.max[2]]
var_val <- variation$range[, 1]
## Plot the variation in 3D
procrustes.var.plot(M1, M2, col.val = var_val, col = list(grDevices::heat.colors, "grey"), lwd = 5)
## Selecting the coordinates and the variation vector
M1 <- procrustes$coords[, , variation$min.max[1]]
M2 <- procrustes$coords[, , variation$min.max[2]]
var_val <- variation$range[, 1]
## Plot the variation in 3D
procrustes.var.plot(M1, M2, col.val = var_val, col = list(grDevices::heat.colors, "grey"), lwd = 10)
## Selecting the coordinates and the variation vector
M1 <- procrustes$coords[, , variation$min.max[1]]
M2 <- procrustes$coords[, , variation$min.max[2]]
var_val <- variation$range[, 1]
## Plot the variation in 3D
procrustes.var.plot(M1, M2, col.val = var_val, col = list(grDevices::heat.colors, "grey"), lwd = 10)
procrustes.var.plot
## Selecting the coordinates and the variation vector
M1 <- procrustes$coords[, , variation$min.max[1]]
M2 <- procrustes$coords[, , variation$min.max[2]]
var_val <- variation$range[, 1]
## Plot the variation in 3D
procrustes.var.plot(M1, M2, col.val = var_val, col = list(grDevices::heat.colors, "grey"), lwd = 100)
