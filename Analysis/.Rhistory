knitr::opts_knit$set(root.dir = 'C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data', echo = TRUE)
library(Morpho)
library(rgl)
library(Rvcg)
library(geomorph)
library(abind)
setwd('C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data')
## import meshes and points cloud
subtropicus.holo<-file2mesh('3Dmodels/Asubtropicus/J17407.ply',readcol=F,clean=T)
subtropicus.p<-(read.csv('Templatecoords.csv', header = F))
dim(subtropicus.p)
rownames(subtropicus.p)<-subtropicus.p$V1
subtropicus.p1 <- subtropicus.p[,-1]
template.pf <- subtropicus.p1[1:82,]
template.pc <- subtropicus.p1[83:267,]
template.pp <- subtropicus.p1[268:412,]
template.p <- rbind(template.pf, template.pp, template.pc)
#A <- arrayspecs(subtropicus.p1, 412, 3)
#dim(A)
#Ahead <- head(dimnames(A))[3]
#template.p<-A[,,1]
#antestspecs<-A[,,2:5]
shade3d(subtropicus.holo,col=8)
spheres3d(subtropicus.p1[1:82,],radius=0.3,col=1)#fixed. nb of landmarks = (z-1)/3  82
spheres3d(subtropicus.p1[83:267,],radius=0.2,col=2) #curves 185
spheres3d(subtropicus.p1[268:412,],radius=0.1,col=3) #patches 145
text3d(subtropicus.p1, texts = c(1:412), asp=FALSE, cex=1, col="blue", pos = 3 )
LMcoords <- t(read.csv('Antechinus_cranialvariation_data.csv', header = T, row.names = 1))
dim(LMcoords)
Ants <- arrayspecs(LMcoords, 82, 3)
dim(Ants)
Ahead <- head(dimnames(Ants))[3]
fixed<-as.matrix(subtropicus.p1[c(1:82),])
patch<-as.matrix(subtropicus.p1[c(83:412),])
# Declaration of rowindices of curves
SC1<-as.integer(1)
SC2<-as.integer(c(2:4))
SC3<-as.integer(c(5:7))
SC4<-as.integer(c(8:10))
SC5<-as.integer(c(11:13))
SC6<-as.integer(14)
SC7<-as.integer(c(15:22))
SC8<-as.integer(c(23:25))
SC9<-as.integer(c(26:28))
SC10<-as.integer(c(29:31))
SC11<-as.integer(c(32:34))
SC12<-as.integer(c(35:38))
SC13<-as.integer(c(39:42))
SC14<-as.integer(c(43:45))
SC15<-as.integer(c(46:48))
SC16<-as.integer(c(49:50))
SC17<-as.integer(c(51:52))
SC18<-as.integer(c(53:54))
SC19<-as.integer(c(55:56))
SC20<-as.integer(c(57:61))
SC21<-as.integer(c(62:66))
SC22<-as.integer(c(67:69))
SC23<-as.integer(c(70:71))
SC24<-as.integer(c(72:75))
SC25<-as.integer(c(76:77))
SC26<-as.integer(78)
SC27<-as.integer(79)
SC28<-as.integer(80)
SC29<-as.integer(81)
SC30<-as.integer(c(82:84))
SC31<-as.integer(c(85:86))
SC32<-as.integer(c(87:90))
SC33<-as.integer(c(91:92))
SC34<-as.integer(93)
SC35<-as.integer(94)
SC36<-as.integer(95)
SC37<-as.integer(96)
SC38<-as.integer(c(97:98))
SC39<-as.integer(c(99:100))
SC40<-as.integer(c(101:105))
SC41<-as.integer(c(106:108))
SC42<-as.integer(c(109:111))
SC43<-as.integer(c(112:115))
SC44<-as.integer(c(116:119))
SC45<-as.integer(c(120:123))
SC47<-as.integer(c(128:130))
SC48<-as.integer(c(131:133))
SC49<-as.integer(c(134:136))
SC50<-as.integer(c(137:141))
SC51<-as.integer(c(142:144))
SC52<-as.integer(c(145:149))
SC53<-as.integer(150)
SC54<-as.integer(151)
SC55<-as.integer(c(152:156))
SC56<-as.integer(c(157:161))
SC57<-as.integer(c(162:163))
SC58<-as.integer(c(164:165))
SC59<-as.integer(c(166:168))
SC60<-as.integer(c(169:171))
SC61<-as.integer(c(172:174))
SC62<-as.integer(c(175:182))
SC63<-as.integer(c(183:185))
#curves1<-list(SC2,SC3)
curves<-list(SC1,SC2,SC3,SC4,SC5,SC6,SC7,SC8,SC9,SC10,SC11,SC12,SC13,SC14,SC15,SC16,SC17,SC18,SC19,SC20,         SC21,SC22,SC23,SC24,SC25,SC26,SC27,SC28,SC29,SC30,SC31,SC32,SC33,SC34,SC35,SC36,SC37,SC38,SC39,SC40,SC41,SC42,SC43,SC44,SC45,SC46,SC47,SC48,SC49,SC50,SC51,SC52,SC53,SC54,SC55,SC56,SC57,SC58,SC59,SC60,SC61,SC62,SC63)
SC45<-as.integer(c(120:123))
SC46<-as.integer(c(124:127))
#curves1<-list(SC2,SC3)
curves<-list(SC1,SC2,SC3,SC4,SC5,SC6,SC7,SC8,SC9,SC10,SC11,SC12,SC13,SC14,SC15,SC16,SC17,SC18,SC19,SC20,         SC21,SC22,SC23,SC24,SC25,SC26,SC27,SC28,SC29,SC30,SC31,SC32,SC33,SC34,SC35,SC36,SC37,SC38,SC39,SC40,SC41,SC42,SC43,SC44,SC45,SC46,SC47,SC48,SC49,SC50,SC51,SC52,SC53,SC54,SC55,SC56,SC57,SC58,SC59,SC60,SC61,SC62,SC63)
Atlas<-createAtlas(subtropicus.holo,landmarks=fixed,patch=patch, patchCurves = curves)
cols<-c("black","red","green","blue")
plotAtlas(Atlas, pt.size=0.2, point = "s", legend = TRUE, cols = cols)
#The below is code to take out a small subsample of the whole 3d array
Folder <- "C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/"
#Navigate to folder with the subsample of ply files
Plylist <- sub(".ply", "", list.files(Folder))
match(Plylist, dimnames(Ants)[[3]])
data_reorder<-Ants[, , match(Plylist, dimnames(Ants)[[3]])]
names_reorder<-dimnames(data_reorder)[[3]]
match(names_reorder, Plylist)
lmplacement<-placePatch(Atlas,data_reorder,path=Folder, inflate=1) #ray=TRUE for projection along surface normals instead of closest point
checkLM(lmplacement, path = Folder, atlas=Atlas)
dim(data_reorder)
attributes(data_reorder)
class(data_reorder)
data_reorder
?placePatch
class(Atlas)
dim(data_reorder)
class(data_reorder)
data_reorder
lmplacement<-placePatch(Atlas,data_reorder,path=Folder, inflate=1) #ray=TRUE for projection along surface normals instead of closest point
Folder
Atlas
plotAtlas(Atlas, pt.size=0.2, point = "s", legend = TRUE, cols = cols)
lmplacement<-placePatch(Atlas,data_reorder,path=Plylist, inflate=1) #ray=TRUE for projection along surface normals instead of closest point
lmplacement<-placePatch(Atlas,data_reorder,path=Folder, inflate=1) #ray=TRUE for projection along surface normals instead of closest point
data_reorder
dimnames(data_reorder)
#The below is code to take out a small subsample of the whole 3d array
Folder <- "C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/"
#Navigate to folder with the subsample of ply files
Plylist <- sub(".ply", "", list.files(Folder))
Plylist
match(Plylist, dimnames(Ants)[[3]])
data_reorder<-Ants[, , match(Plylist, dimnames(Ants)[[3]])]
names_reorder<-dimnames(data_reorder)[[3]]
match(names_reorder, Plylist)
lmplacement<-placePatch(Atlas,data_reorder,path=Folder, inflate=1) #ray=TRUE for projection along surface normals instead of closest point
dimnames(data_reorder)
Plylist
Ants
Ants[,,1]
Ants[1,,]
data_reorder[,,1]
data_reorder[1,,]
Ants[1,,]
specimen1<-file2mesh('C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/CM16483.ply',readcol=F,clean=T)
shade3d(specimen1,col=8)
spheres3d(data_reorder[,,1],radius=0.3,col=1)#fixed. nb of landmarks = (z-1)/3  82
Atlas$mesh
Atlas$landmarks
Atlas$patch
Atlas$patchCurves
data_reorder
lmplacement<-placePatch(Atlas,data_reorder,path=Folder, inflate=5) #ray=TRUE for projection along surface normals instead of closest point
listish<-do.call(list,lapply(nm2,function(x) file2mesh(x,readcol=F,clean=T)))
#The below is code to take out a small subsample of the whole 3d array
Folder <- "C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/"
#Navigate to folder with the subsample of ply files
Plylist <- sub(".ply", "", list.files(Folder))
Plylist
match(Plylist, dimnames(Ants)[[3]])
data_reorder<-Ants[, , match(Plylist, dimnames(Ants)[[3]])]
names_reorder<-dimnames(data_reorder)[[3]]
match(names_reorder, Plylist)
#The below is code to take out a small subsample of the whole 3d array
Folder <- "C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/"
#Navigate to folder with the subsample of ply files
Plylist <- sub(".ply", "", list.files(Folder))
match(Plylist, dimnames(Ants)[[3]])
data_reorder<-Ants[, , match(Plylist, dimnames(Ants)[[3]])]
names_reorder<-dimnames(data_reorder)[[3]]
match(names_reorder, Plylist)
lmplacement<-placePatch(Atlas,data_reorder,path=Folder, inflate=5) #ray=TRUE for projection along surface normals instead of closest point
lmplacement<-placePatch(Atlas,data_reorder,path=Folder, inflate=0) #ray=TRUE for projection along surface normals instead of closest point
placePatch()
placePatch
tanvec
lmplacement<-placePatch(Atlas,data_reorder,path="C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/", inflate=0) #ray=TRUE for projection along surface normals instead of closest point
data_reorder
data_reorder[1,,]
data_reorder[,1,]
knitr::opts_knit$set(root.dir = 'C:/Users/pietro/Desktop/Pietro/Specimens', echo = TRUE)
#load libraries
library(ggplot2)
library(digest)
library(rgl)
library(geomorph)
library(vegan) # vegan version 2.4-4
library(Morpho)
library(ape)
library(raster)
library(sp)
library(MASS)
library(RColorBrewer)
library(shapes)
library(wesanderson)
library(magick)
gridpars=gridPar(pt.size=0.5, pt.bg="pink")
colswes <- wes_palette("Darjeeling1")
names(colswes) <- levels(gdfhallucatusminusisland$Population ) # assign levels to colours
col.gp <- colswes[match(gdfhallucatusminusisland$Population, names(colswes))] # magic!
head(col.gp) # see the result
names_array <- dimnames(A)[[3]]
names_classifier <- rownames(quollsdata)
match(names_array, names_classifier)
A_reorder <- A[,,match(names_classifier, names_array)]
names_Areorder <- dimnames(A_reorder)[[3]]
match(names_Areorder, names_classifier)
lmplacement<-placePatch(Atlas,data_reorder,path="C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/", prefix =NULL, fileext = ".ply",
ray = TRUE, inflate = NULL, tol = 5, relax.patch = TRUE,
keep.fix = fixed, rhotol = NULL, silent = FALSE, mc.cores = 1) #ray=TRUE for projection along surface normals instead of closest point
checkLM(lmplacement, path = Folder, atlas=Atlas)
lmplacement<-placePatch(Atlas,data_reorder,path="C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/", prefix =NULL, fileext = ".ply",
inflate = 1) #ray=TRUE for projection along surface normals instead of closest point
lmplacement<-placePatch(Atlas,data_reorder,path="C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/", prefix =NULL, fileext = ".ply",	inflate = 1, ray = TRUE, tol = 5, relax.patch = TRUE,
keep.fix = fixed, rhotol = NULL, silent = FALSE, mc.cores = 1) #ray=TRUE for projection along surface normals instead of closest point
lmplacement<-placePatch(Atlas,data_reorder,path="C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/", prefix =NULL, fileext = ".ply",	inflate = 1, ray = TRUE, tol = 5, relax.patch = TRUE,
keep.fix = fixed, rhotol = NULL, silent = FALSE) #ray=TRUE for projection along surface normals instead of closest point
lmplacement<-placePatch(Atlas,data_reorder,path="C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/", prefix =NULL, fileext = ".ply",	inflate = 1, ray = TRUE, tol = 5, relax.patch = TRUE,
keep.fix = fixed, rhotol = NULL) #ray=TRUE for projection along surface normals instead of closest point
lmplacement<-placePatch(Atlas,data_reorder,path="C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/", prefix =NULL, fileext = ".ply",	inflate = 1, ray = TRUE, tol = 5, relax.patch = TRUE,
keep.fix = fixed) #ray=TRUE for projection along surface normals instead of closest point
lmplacement<-placePatch(Atlas,data_reorder,path="C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/", prefix =NULL, fileext = ".ply",	inflate = 1, ray = TRUE, tol = 5, relax.patch = TRUE) #ray=TRUE for projection along surface normals instead of closest point
lmplacement<-placePatch(Atlas,data_reorder,path="C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/", prefix =NULL, fileext = ".ply",	inflate = 1, ray = TRUE, tol = 5, keep.fix = fixed) #ray=TRUE for projection along surface normals instead of closest point
lmplacement<-placePatch(Atlas,data_reorder,path="C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/", prefix =NULL, fileext = ".ply",	inflate = 1, ray = TRUE, tol = 5) #ray=TRUE for projection along surface normals instead of closest point
lmplacement<-placePatch(Atlas,data_reorder,path="C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/", prefix =NULL, fileext = ".ply",	inflate = 1) #ray=TRUE for projection along surface normals instead of closest point
lmplacement<-placePatch(Atlas,data_reorder,path="C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/", prefix =NULL, fileext = ".ply",	inflate = 1, relax.patch = TRUE) #ray=TRUE for projection along surface normals instead of closest point
placePatch
match(names_reorder, Plylist)
lmplacement<-placePatch(Atlas,data_reorder,path=Folder, prefix =NULL, fileext = ".ply",	inflate = 1, relax.patch = TRUE) #ray=TRUE for projection along surface normals instead of closest point
#The below is code to take out a small subsample of the whole 3d array
Folder <- "/3Dmodels/AntechinusTest/"
lmplacement<-placePatch(Atlas,data_reorder,path=Folder, prefix =NULL, fileext = ".ply",	inflate = 1, relax.patch = TRUE) #ray=TRUE for projection along surface normals instead of closest point
knitr::opts_knit$set(root.dir = 'C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data', echo = TRUE)
library(Morpho)
library(rgl)
library(Rvcg)
library(geomorph)
library(abind)
setwd('C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data')
setwd('C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data')
knitr::opts_knit$set(root.dir = 'C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data', echo = TRUE)
subtropicus.holo<-file2mesh('3Dmodels/Asubtropicus/J17407.ply',readcol=F,clean=T)
lmplacement<-placePatch(Atlas,data_reorder,path="3Dmodels/AntechinusTest/", prefix =NULL, fileext = ".ply",	inflate = 1, relax.patch = TRUE) #ray=TRUE for projection along surface normals instead of closest point
lmplacement<-placePatch(Atlas,data_reorder,path="3Dmodels/AntechinusTest", prefix =NULL, fileext = ".ply",	inflate = 1, relax.patch = TRUE) #ray=TRUE for projection along surface normals instead of closest point
lmplacement<-placePatch(Atlas,data_reorder,path="3Dmodels/AntechinusTest", prefix =NULL, fileext = ".ply",	inflate = 1, relax.patch = TRUE) #ray=TRUE for projection along surface normals instead of closest point
dimnames(data_reorder)[[3]]
Plylist
lmplacement<-placePatch(Atlas,data_reorder,path="3Dmodels/Astuartii", prefix =NULL, fileext = ".ply",	inflate = 1, relax.patch = TRUE) #ray=TRUE for projection along surface normals instead of closest point
#The below is code to take out a small subsample of the whole 3d array
Folder <- "C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/"
#Navigate to folder with the subsample of ply files
Plylist <- sub(".ply", "", list.files(Folder))
match(Plylist, dimnames(Ants)[[3]])
data_reorder<-Ants[, , match(Plylist, dimnames(Ants)[[3]])]
names_reorder<-dimnames(data_reorder)[[3]]
match(names_reorder, Plylist)
lmplacement<-placePatch(Atlas,data_reorder,path="3Dmodels/AntechinusTest", prefix =NULL, fileext = ".ply",	inflate = 1, relax.patch = TRUE) #ray=TRUE for projection along surface normals instead of closest point
getwd()
?getwd
lmplacement<-placePatch(Atlas,data_reorder,path="3Dmodels/AntechinusTest", prefix =NULL, fileext = ".ply",	inflate = 1, relax.patch = TRUE) #ray=TRUE for projection along surface normals instead of closest point
warnings()
knitr::opts_knit$set(root.dir = 'C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data', echo = TRUE)
library(Morpho)
library(rgl)
library(Rvcg)
library(geomorph)
library(abind)
setwd('C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data')
## import meshes and points cloud
subtropicus.holo<-file2mesh('3Dmodels/Asubtropicus/J17407.ply',readcol=F,clean=T)
subtropicus.p<-(read.csv('Templatecoords.csv', header = F))
dim(subtropicus.p)
rownames(subtropicus.p)<-subtropicus.p$V1
subtropicus.p1 <- subtropicus.p[,-1]
template.pf <- subtropicus.p1[1:82,]
template.pc <- subtropicus.p1[83:267,]
template.pp <- subtropicus.p1[268:412,]
template.p <- rbind(template.pf, template.pp, template.pc)
#A <- arrayspecs(subtropicus.p1, 412, 3)
#dim(A)
#Ahead <- head(dimnames(A))[3]
#template.p<-A[,,1]
#antestspecs<-A[,,2:5]
shade3d(subtropicus.holo,col=8)
spheres3d(subtropicus.p1[1:82,],radius=0.3,col=1)#fixed. nb of landmarks = (z-1)/3  82
spheres3d(subtropicus.p1[83:267,],radius=0.2,col=2) #curves 185
spheres3d(subtropicus.p1[268:412,],radius=0.1,col=3) #patches 145
text3d(subtropicus.p1, texts = c(1:412), asp=FALSE, cex=1, col="blue", pos = 3 )
LMcoords <- t(read.csv('Antechinus_cranialvariation_data.csv', header = T, row.names = 1))
dim(LMcoords)
Ants <- arrayspecs(LMcoords, 82, 3)
dim(Ants)
Ahead <- head(dimnames(Ants))[3]
#### create the template
fixed<-as.matrix(subtropicus.p1[c(1:82),])
#fixed<-as.matrix(template.p[1:82,])
patch<-as.matrix(subtropicus.p1[c(83:412),])
#patch<-as.matrix(template.p[83:412,])
#patch semilandmark rows don't need renaming because they come first
#template.1<-createAtlas(subtropicus.holo,landmarks=fixed,patch=patch,
#patchCurves = list(as.integer(template.p[c(228:235),])))
#plotAtlas(template.1,pt.size=0.2,legend=FALSE,render="s")
# Declaration of rowindices of curves
SC1<-as.integer(1)
SC2<-as.integer(c(2:4))
SC3<-as.integer(c(5:7))
SC4<-as.integer(c(8:10))
SC5<-as.integer(c(11:13))
SC6<-as.integer(14)
SC7<-as.integer(c(15:22))
SC8<-as.integer(c(23:25))
SC9<-as.integer(c(26:28))
SC10<-as.integer(c(29:31))
SC11<-as.integer(c(32:34))
SC12<-as.integer(c(35:38))
SC13<-as.integer(c(39:42))
SC14<-as.integer(c(43:45))
SC15<-as.integer(c(46:48))
SC16<-as.integer(c(49:50))
SC17<-as.integer(c(51:52))
SC18<-as.integer(c(53:54))
SC19<-as.integer(c(55:56))
SC20<-as.integer(c(57:61))
SC21<-as.integer(c(62:66))
SC22<-as.integer(c(67:69))
SC23<-as.integer(c(70:71))
SC24<-as.integer(c(72:75))
SC25<-as.integer(c(76:77))
SC26<-as.integer(78)
SC27<-as.integer(79)
SC28<-as.integer(80)
SC29<-as.integer(81)
SC30<-as.integer(c(82:84))
SC31<-as.integer(c(85:86))
SC32<-as.integer(c(87:90))
SC33<-as.integer(c(91:92))
SC34<-as.integer(93)
SC35<-as.integer(94)
SC36<-as.integer(95)
SC37<-as.integer(96)
SC38<-as.integer(c(97:98))
SC39<-as.integer(c(99:100))
SC40<-as.integer(c(101:105))
SC41<-as.integer(c(106:108))
SC42<-as.integer(c(109:111))
SC43<-as.integer(c(112:115))
SC44<-as.integer(c(116:119))
SC45<-as.integer(c(120:123))
SC46<-as.integer(c(124:127))
SC47<-as.integer(c(128:130))
SC48<-as.integer(c(131:133))
SC49<-as.integer(c(134:136))
SC50<-as.integer(c(137:141))
SC51<-as.integer(c(142:144))
SC52<-as.integer(c(145:149))
SC53<-as.integer(150)
SC54<-as.integer(151)
SC55<-as.integer(c(152:156))
SC56<-as.integer(c(157:161))
SC57<-as.integer(c(162:163))
SC58<-as.integer(c(164:165))
SC59<-as.integer(c(166:168))
SC60<-as.integer(c(169:171))
SC61<-as.integer(c(172:174))
SC62<-as.integer(c(175:182))
SC63<-as.integer(c(183:185))
# Creation d'une liste de toutes les courbes, incluant les lm anatomiques bordant les courbes
#curves1<-list(SC2,SC3)
curves<-list(SC1,SC2,SC3,SC4,SC5,SC6,SC7,SC8,SC9,SC10,SC11,SC12,SC13,SC14,SC15,SC16,SC17,SC18,SC19,SC20,         SC21,SC22,SC23,SC24,SC25,SC26,SC27,SC28,SC29,SC30,SC31,SC32,SC33,SC34,SC35,SC36,SC37,SC38,SC39,SC40,SC41,SC42,SC43,SC44,SC45,SC46,SC47,SC48,SC49,SC50,SC51,SC52,SC53,SC54,SC55,SC56,SC57,SC58,SC59,SC60,SC61,SC62,SC63)
#Atlas plot and original plot to check if the landmark numbers remain in the same order
#Atlas<-createAtlas(subtropicus.holo,landmarks=fixed,patch=patch, patchCurves = curves1)
Atlas<-createAtlas(subtropicus.holo,landmarks=fixed,patch=patch, patchCurves = curves)
cols<-c("black","red","green","blue")
plotAtlas(Atlas, pt.size=0.2, point = "s", legend = TRUE, cols = cols)
#This places the numbers of the landmarks as per the Atlas
#text3d(subtropicus.p1, texts = c(1:412), asp=FALSE, cex=2, col="blue", pos = 3 )
#testmesh <- file2mesh('3Dmodels/Asubtropicus/JM213.ply',readcol=T,clean=T)
#open3d()
#plotspec(testmesh, lmplacement[,,1], ptsize = 0.1  )
#text3d(lmplacement[,,1], texts = c(1:412), asp=FALSE, cex=1, col="blue", pos = 3 )
### 4th step apply the template to all the other specimens, remember to play with inflate/deflate
#The below is code to take out a small subsample of the whole 3d array
Folder <- "C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/"
#Navigate to folder with the subsample of ply files
Plylist <- sub(".ply", "", list.files(Folder))
match(Plylist, dimnames(Ants)[[3]])
data_reorder<-Ants[, , match(Plylist, dimnames(Ants)[[3]])]
names_reorder<-dimnames(data_reorder)[[3]]
match(names_reorder, Plylist)
lmplacement<-placePatch(Atlas,data_reorder,path="3Dmodels/AntechinusTest", prefix =NULL, fileext = ".ply",	inflate = 1, relax.patch = TRUE) #ray=TRUE for projection along surface normals instead of closest point
knitr::opts_knit$set(root.dir = 'C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data', echo = TRUE)
library(Morpho)
library(rgl)
library(Rvcg)
library(geomorph)
library(abind)
#this is not needed in RMD
#setwd('C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data')
## import meshes and points cloud
# SEE HOW I CHANGED THE PATHS TO BE ../path/path/file?  ANY FILES IN OTHER FOLDERS NEED TO BE NAVIGATED TO LIKE THIS. AND YOU COULD NOT KNOW THIS. I DIDN'T SEE IT EITHER.
subtropicus.holo<-file2mesh('../Data/3Dmodels/Asubtropicus/J17407.ply',readcol=F,clean=T)
subtropicus.p<-(read.csv('../Data/Templatecoords.csv', header = F))
dim(subtropicus.p)
rownames(subtropicus.p)<-subtropicus.p$V1
subtropicus.p1 <- subtropicus.p[,-1]
template.pf <- subtropicus.p1[1:82,]
template.pc <- subtropicus.p1[83:267,]
template.pp <- subtropicus.p1[268:412,]
template.p <- rbind(template.pf, template.pp, template.pc)
#A <- arrayspecs(subtropicus.p1, 412, 3)
#dim(A)
#Ahead <- head(dimnames(A))[3]
#template.p<-A[,,1]
#antestspecs<-A[,,2:5]
shade3d(subtropicus.holo,col=8)
spheres3d(subtropicus.p1[1:82,],radius=0.3,col=1)#fixed. nb of landmarks = (z-1)/3  82
spheres3d(subtropicus.p1[83:267,],radius=0.2,col=2) #curves 185
spheres3d(subtropicus.p1[268:412,],radius=0.1,col=3) #patches 145
text3d(subtropicus.p1, texts = c(1:412), asp=FALSE, cex=1, col="blue", pos = 3 )
LMcoords <- t(read.csv('../Data/Antechinus_cranialvariation_data.csv', header = T, row.names = 1))
dim(LMcoords)
Ants <- arrayspecs(LMcoords, 82, 3)
dim(Ants)
Ahead <- head(dimnames(Ants))[3]
#### create the template
fixed<-as.matrix(subtropicus.p1[c(1:82),])
#fixed<-as.matrix(template.p[1:82,])
patch<-as.matrix(subtropicus.p1[c(83:412),])
#patch<-as.matrix(template.p[83:412,])
#patch semilandmark rows don't need renaming because they come first
#template.1<-createAtlas(subtropicus.holo,landmarks=fixed,patch=patch,
#patchCurves = list(as.integer(template.p[c(228:235),])))
#plotAtlas(template.1,pt.size=0.2,legend=FALSE,render="s")
# Declaration of rowindices of curves
SC1<-as.integer(1)
SC2<-as.integer(c(2:4))
SC3<-as.integer(c(5:7))
SC4<-as.integer(c(8:10))
SC5<-as.integer(c(11:13))
SC6<-as.integer(14)
SC7<-as.integer(c(15:22))
SC8<-as.integer(c(23:25))
SC9<-as.integer(c(26:28))
SC10<-as.integer(c(29:31))
SC11<-as.integer(c(32:34))
SC12<-as.integer(c(35:38))
SC13<-as.integer(c(39:42))
SC14<-as.integer(c(43:45))
SC15<-as.integer(c(46:48))
SC16<-as.integer(c(49:50))
SC17<-as.integer(c(51:52))
SC18<-as.integer(c(53:54))
SC19<-as.integer(c(55:56))
SC20<-as.integer(c(57:61))
SC21<-as.integer(c(62:66))
SC22<-as.integer(c(67:69))
SC23<-as.integer(c(70:71))
SC24<-as.integer(c(72:75))
SC25<-as.integer(c(76:77))
SC26<-as.integer(78)
SC27<-as.integer(79)
SC28<-as.integer(80)
SC29<-as.integer(81)
SC30<-as.integer(c(82:84))
SC31<-as.integer(c(85:86))
SC32<-as.integer(c(87:90))
SC33<-as.integer(c(91:92))
SC34<-as.integer(93)
SC35<-as.integer(94)
SC36<-as.integer(95)
SC37<-as.integer(96)
SC38<-as.integer(c(97:98))
SC39<-as.integer(c(99:100))
SC40<-as.integer(c(101:105))
SC41<-as.integer(c(106:108))
SC42<-as.integer(c(109:111))
SC43<-as.integer(c(112:115))
SC44<-as.integer(c(116:119))
SC45<-as.integer(c(120:123))
SC46<-as.integer(c(124:127))
SC47<-as.integer(c(128:130))
SC48<-as.integer(c(131:133))
SC49<-as.integer(c(134:136))
SC50<-as.integer(c(137:141))
SC51<-as.integer(c(142:144))
SC52<-as.integer(c(145:149))
SC53<-as.integer(150)
SC54<-as.integer(151)
SC55<-as.integer(c(152:156))
SC56<-as.integer(c(157:161))
SC57<-as.integer(c(162:163))
SC58<-as.integer(c(164:165))
SC59<-as.integer(c(166:168))
SC60<-as.integer(c(169:171))
SC61<-as.integer(c(172:174))
SC62<-as.integer(c(175:182))
SC63<-as.integer(c(183:185))
# Creation d'une liste de toutes les courbes, incluant les lm anatomiques bordant les courbes
#curves1<-list(SC2,SC3)
curves<-list(SC1,SC2,SC3,SC4,SC5,SC6,SC7,SC8,SC9,SC10,SC11,SC12,SC13,SC14,SC15,SC16,SC17,SC18,SC19,SC20,         SC21,SC22,SC23,SC24,SC25,SC26,SC27,SC28,SC29,SC30,SC31,SC32,SC33,SC34,SC35,SC36,SC37,SC38,SC39,SC40,SC41,SC42,SC43,SC44,SC45,SC46,SC47,SC48,SC49,SC50,SC51,SC52,SC53,SC54,SC55,SC56,SC57,SC58,SC59,SC60,SC61,SC62,SC63)
#Atlas plot and original plot to check if the landmark numbers remain in the same order
#Atlas<-createAtlas(subtropicus.holo,landmarks=fixed,patch=patch, patchCurves = curves1)
Atlas<-createAtlas(subtropicus.holo,landmarks=fixed,patch=patch, patchCurves = list(as.integer(c(320:327))))
Atlas<-createAtlas(subtropicus.holo,landmarks=fixed,patch=patch, patchCurves = curves)
plotAtlas(Atlas, pt.size=0.2, point = "s", legend = TRUE, cols = "black", "red", "green", "blue")
