text3d(Ants[,,1], texts = c(1:82), asp = FALSE, cex = 1, col="blue", pos = 3)
shade3d(CM16483, col = 8)
spheres3d(Ants[,,1],radius = 0.2,col = 1)
text3d(Ants[,,1], texts = c(1:82), asp = FALSE, cex = 2, col="blue", pos = 3)
knitr::opts_knit$set(root.dir = '../Viacavaetal_Antechinus/Data', echo = TRUE)
library(Morpho)
library(rgl)
library(Rvcg)
library(geomorph)
library(abind)
## import template mesh and landmark set
CM16483<-file2mesh('../Data/3Dmodels/AntechinusAll3Dmodels/CM16483.ply',readcol=F,clean=T)
shade3d(CM16483, col = 8)
spheres3d(Ants[,,1],radius = 0.2,col = 1)
## import template mesh and landmark set
subtropicus.holo<-file2mesh('../Data/3Dmodels/Asubtropicus/J17407.ply',readcol=F,clean=T)
subtropicus.p<-(read.csv('../Data/Templatecoords.csv', header = F))
dim(subtropicus.p)
rownames(subtropicus.p)<-subtropicus.p$V1
subtropicus.p1 <- subtropicus.p[,-1]
dim(subtropicus.p1) #412 landmarks, 3 dimensions
#reordering landmarks: curves first, patches second and curves last
template.pf <- subtropicus.p1[1:82,]
template.pc <- subtropicus.p1[83:267,]
template.pp <- subtropicus.p1[268:412,]
template.p <- rbind(template.pf, template.pc, template.pp)
template.p1 <- template.p[-c(83,96,131:138,152:153,158:163,167:168,173:182,232:233,244:247),]
#VW trying to get this into an array - first turn each column into a vector
V2 <-template.p1$V2
V3 <-template.p1$V3
V4 <- template.p1$V4
template_array <- array(c(V2, V3, V4), dim = c(376, 3, 1))
#plot landmarks on mesh to check if they correspond well
shade3d(subtropicus.holo,col = 8)
spheres3d(template_array[1:82,,],radius = 0.2,col = 1)#fixed. nb of landmarks = (  z-1)/3  82
spheres3d(template_array[83:231,,],radius = 0.1,col = 2) #curves 185
spheres3d(template_array[232:376,,],radius = 0.1,col = 3) #patches 145
text3d(template_array[1:376,,], texts = c(1:376), asp = FALSE, cex = 1, col="blue", pos = 3) #plot number of landmarks to check ordering
#import landmark sets for all specimens
LMcoords <- t(read.csv('../Data/Antechinus_LMcoords.csv', header = T, row.names = 1))
dim(LMcoords)
Ants <- arrayspecs(LMcoords, 82, 3) #convert into array
dim(Ants)
Ahead <- head(dimnames(Ants))[3]
# specify fixed landmarks of template specimen in a matrix
fixed<-as.matrix(template_array[c(1:82),,])
# specify semilandmarks of template specimen in a matrix
patch<-as.matrix(template_array[c(83:376),,])
#Atlas creation
Atlas<-createAtlas(subtropicus.holo,landmarks = fixed, patch = patch, patchCurves = list(c(1:3, c(4:6), c(7:9), c(10:12), c(13:20), c(21:23), c(24:26), c(27:29), c(30:32), c(33:36), c(37:40), c(41:43), c(44:46), c(47:51), c(52:56), c(57:59), c(60:63), c(64:66), c(67:70), c(71:75), c(76:78), c(79:81), c(82:85), c(86:89), c(90:93), c(94:97), c(98:100), c(101:103), c(104:106), c(107:111), c(112:114), c(115:119), c(120:124), c(125:129), c(130:132), c(133:135), c(136:138), c(139:146), c(147:149))))
#Atlas plot
cols<-c("black","red","green","blue")
plotAtlas(Atlas, pt.size=0.2, point = "s", legend = TRUE, cols = cols)
#Folder with all meshes
Folder <- "../Data/3Dmodels/AntechinusTest/"
#Navigate to folder with the subsample of ply files
Plylist <- sub(".ply", "", list.files(Folder))
match(Plylist, dimnames(Ants)[[3]])
Plylist==dimnames(Ants)[[3]]
data_reorder<-Ants[, , match(Plylist, dimnames(Ants)[[3]])]
names_reorder<-dimnames(data_reorder)[[3]]
match(names_reorder, Plylist)
dimnames(data_reorder)[[3]] == Plylist
lmplacement<-placePatch(Atlas, data_reorder, path="../Data/3Dmodels/AntechinusTest/", inflate=2) # use ray=TRUE for projection along surface normals instead of closest point???
#check good placement of semilandmarks in all specimens
checkLM(lmplacement, path = "../Data/3Dmodels/AntechinusTest/", atlas=Atlas, point = "s", pt.size = 0.2)
#check good placement of semilandmarks in all specimens
checkLM(lmplacement, path = "../Data/3Dmodels/AntechinusTest/", atlas=Atlas, point = "s", pt.size = 0.2)
#check good placement of semilandmarks in all specimens
checkLM(lmplacement, path = "../Data/3Dmodels/AntechinusTest/", atlas=Atlas, point = "s", pt.size = 0.2)
knitr::opts_knit$set(root.dir = '../Viacavaetal_Antechinus/Data', echo = TRUE)
library(Morpho)
library(rgl)
library(Rvcg)
library(geomorph)
library(abind)
knitr::opts_knit$set(root.dir = '../Viacavaetal_Antechinus/Data', echo = TRUE)
library(Morpho)
library(rgl)
library(Rvcg)
library(geomorph)
library(abind)
## import template mesh and landmark set
subtropicus.holo<-file2mesh('../Data/3Dmodels/Asubtropicus/J17407.ply',readcol=F,clean=T)
subtropicus.p<-(read.csv('../Data/Templatecoords.csv', header = F))
dim(subtropicus.p)
rownames(subtropicus.p)<-subtropicus.p$V1
subtropicus.p1 <- subtropicus.p[,-1]
dim(subtropicus.p1) #412 landmarks, 3 dimensions
#reordering landmarks: curves first, patches second and curves last
template.pf <- subtropicus.p1[1:82,]
template.pc <- subtropicus.p1[83:267,]
template.pp <- subtropicus.p1[268:412,]
template.p <- rbind(template.pf, template.pc, template.pp)
template.p1 <- template.p[-c(83,96,131:138,152:153,158:163,167:168,173:182,232:233,244:247),]
#VW trying to get this into an array - first turn each column into a vector
V2 <-template.p1$V2
V3 <-template.p1$V3
V4 <- template.p1$V4
template_array <- array(c(V2, V3, V4), dim = c(376, 3, 1))
#plot landmarks on mesh to check if they correspond well
shade3d(subtropicus.holo,col = 8)
spheres3d(template_array[1:82,,],radius = 0.2,col = 1)#fixed. nb of landmarks = (  z-1)/3  82
spheres3d(template_array[83:231,,],radius = 0.1,col = 2) #curves 185
spheres3d(template_array[232:376,,],radius = 0.1,col = 3) #patches 145
text3d(template_array[1:376,,], texts = c(1:376), asp = FALSE, cex = 1, col="blue", pos = 3) #plot number of landmarks to check ordering
#import landmark sets for all specimens
LMcoords <- t(read.csv('../Data/Antechinus_LMcoords.csv', header = T, row.names = 1))
dim(LMcoords)
Ants <- arrayspecs(LMcoords, 82, 3) #convert into array
dim(Ants)
Ahead <- head(dimnames(Ants))[3]
# specify fixed landmarks of template specimen in a matrix
fixed<-as.matrix(template_array[c(1:82),,])
# specify semilandmarks of template specimen in a matrix
patch<-as.matrix(template_array[c(83:376),,])
rownames(patch)<-c(1:294)
#Atlas creation
Atlas<-createAtlas(subtropicus.holo,landmarks = fixed, patch = patch, patchCurves = list(c(1:3, c(4:6), c(7:9), c(10:12), c(13:20), c(21:23), c(24:26), c(27:29), c(30:32), c(33:36), c(37:40), c(41:43), c(44:46), c(47:51), c(52:56), c(57:59), c(60:63), c(64:66), c(67:70), c(71:75), c(76:78), c(79:81), c(82:85), c(86:89), c(90:93), c(94:97), c(98:100), c(101:103), c(104:106), c(107:111), c(112:114), c(115:119), c(120:124), c(125:129), c(130:132), c(133:135), c(136:138), c(139:146), c(147:149), c(150:294))))
#Atlas plot
cols<-c("black","red","green","blue")
plotAtlas(Atlas, pt.size=0.2, point = "s", legend = TRUE, cols = cols)
#Folder with all meshes
Folder <- "../Data/3Dmodels/AntechinusAll3Dmodels/"
#Navigate to folder with the subsample of ply files
Plylist <- sub(".ply", "", list.files(Folder))
match(Plylist, dimnames(Ants)[[3]])
Plylist==dimnames(Ants)[[3]]
data_reorder<-Ants[, , match(Plylist, dimnames(Ants)[[3]])]
names_reorder<-dimnames(data_reorder)[[3]]
match(names_reorder, Plylist)
dimnames(data_reorder)[[3]] == Plylist
#Folder with all meshes
Folder <- "../Data/3Dmodels/AntechinusAll3Dmodels/"
#Navigate to folder with the subsample of ply files
Plylist <- sub(".ply", "", list.files(Folder))
match(Plylist, dimnames(Ants)[[3]])
Plylist==dimnames(Ants)[[3]]
data_reorder<-Ants[, , match(Plylist, dimnames(Ants)[[3]])]
names_reorder<-dimnames(data_reorder)[[3]]
match(names_reorder, Plylist)
dimnames(data_reorder)[[3]] == Plylist
dim(Plylist)
## import template mesh and landmark set
subtropicus.holo<-file2mesh('../Data/3Dmodels/Asubtropicus/J17407.ply',readcol=F,clean=T)
subtropicus.p<-(read.csv('../Data/Templatecoords.csv', header = F))
dim(subtropicus.p)
rownames(subtropicus.p)<-subtropicus.p$V1
subtropicus.p1 <- subtropicus.p[,-1]
dim(subtropicus.p1) #412 landmarks, 3 dimensions
#reordering landmarks: curves first, patches second and curves last
template.pf <- subtropicus.p1[1:82,]
template.pc <- subtropicus.p1[83:267,]
template.pp <- subtropicus.p1[268:412,]
template.p <- rbind(template.pf, template.pc, template.pp)
template.p1 <- template.p[-c(83,96,131:138,152:153,158:163,167:168,173:182,232:233,244:247),]
#VW trying to get this into an array - first turn each column into a vector
V2 <-template.p1$V2
V3 <-template.p1$V3
V4 <- template.p1$V4
template_array <- array(c(V2, V3, V4), dim = c(376, 3, 1))
#plot landmarks on mesh to check if they correspond well
shade3d(subtropicus.holo,col = 8)
spheres3d(template_array[1:82,,],radius = 0.2,col = 1)#fixed. nb of landmarks = (  z-1)/3  82
spheres3d(template_array[83:231,,],radius = 0.1,col = 2) #curves 185
spheres3d(template_array[232:376,,],radius = 0.1,col = 3) #patches 145
text3d(template_array[1:376,,], texts = c(1:376), asp = FALSE, cex = 1, col="blue", pos = 3) #plot number of landmarks to check ordering
#import landmark sets for all specimens
LMcoords <- t(read.csv('../Data/Antechinus_LMcoords.csv', header = T, row.names = 1))
dim(LMcoords)
Ants <- arrayspecs(LMcoords, 82, 3) #convert into array
dim(Ants)
Ahead <- head(dimnames(Ants))[3]
# specify fixed landmarks of template specimen in a matrix
fixed<-as.matrix(template_array[c(1:82),,])
# specify semilandmarks of template specimen in a matrix
patch<-as.matrix(template_array[c(83:376),,])
rownames(patch)<-c(1:294)
#Atlas creation
Atlas<-createAtlas(subtropicus.holo,landmarks = fixed, patch = patch, patchCurves = list(c(1:3, c(4:6), c(7:9), c(10:12), c(13:20), c(21:23), c(24:26), c(27:29), c(30:32), c(33:36), c(37:40), c(41:43), c(44:46), c(47:51), c(52:56), c(57:59), c(60:63), c(64:66), c(67:70), c(71:75), c(76:78), c(79:81), c(82:85), c(86:89), c(90:93), c(94:97), c(98:100), c(101:103), c(104:106), c(107:111), c(112:114), c(115:119), c(120:124), c(125:129), c(130:132), c(133:135), c(136:138), c(139:146), c(147:149), c(150:294))))
#Atlas plot
cols<-c("black","red","green","blue")
plotAtlas(Atlas, pt.size=0.2, point = "s", legend = TRUE, cols = cols)
lmplacement<-placePatch(Atlas, data_reorder, path="../Data/3Dmodels/AntechinusAll3Dmodels/", inflate=2) # use ray=TRUE for projection along surface normals instead of closest point???
setwd("../Data/3Dmodels/AntechinusAll3Dmodels")
provo<-placePatch(Atlas,data_reorder,path="../Data/3Dmodels/AntechinusAll3Dmodels",
inflate=0.5)
mfrow3d(2,3,sharedMouse = T)
shade3d(tempmesh,col=8)
for(i in 1:dim(myset)[[3]]){
next3d()
shade3d(listo[[i]],col=8)
spheres3d(provo[1:82,,i],radius=0.2,col=1)
spheres3d(provo[83:231,,i],radius=0.2,col=2)
spheres3d(provo[232:376,,i],radius=0.2,col=3)
}
for(i in 1:dim(Ants)[[3]]){
next3d()
shade3d(listo[[i]],col=8)
spheres3d(provo[1:82,,i],radius=0.2,col=1)
spheres3d(provo[83:231,,i],radius=0.2,col=2)
spheres3d(provo[232:376,,i],radius=0.2,col=3)
}
nma<-list.files(path="../Data/3Dmodels/AntechinusTest/")
listo<-do.call(list,lapply(nma,function(x) file2mesh(x,readcol=F,clean=T)))
dim(Ants)
knitr::opts_knit$set(root.dir = '../Viacavaetal_Antechinus/Data', echo = TRUE)
library(Morpho)
library(rgl)
library(Rvcg)
library(geomorph)
library(abind)
## import template mesh and landmark set
subtropicus.holo<-file2mesh('../Data/3Dmodels/Asubtropicus/J17407.ply',readcol=F,clean=T)
subtropicus.p<-(read.csv('../Data/Templatecoords.csv', header = F))
dim(subtropicus.p)
rownames(subtropicus.p)<-subtropicus.p$V1
subtropicus.p1 <- subtropicus.p[,-1]
dim(subtropicus.p1) #412 landmarks, 3 dimensions
#reordering landmarks: curves first, patches second and curves last
template.pf <- subtropicus.p1[1:82,]
template.pc <- subtropicus.p1[83:267,]
template.pp <- subtropicus.p1[268:412,]
template.p <- rbind(template.pf, template.pc, template.pp)
template.p1 <- template.p[-c(83,96,131:138,152:153,158:163,167:168,173:182,232:233,244:247),]
#VW trying to get this into an array - first turn each column into a vector
V2 <-template.p1$V2
V3 <-template.p1$V3
V4 <- template.p1$V4
template_array <- array(c(V2, V3, V4), dim = c(376, 3, 1))
#plot landmarks on mesh to check if they correspond well
shade3d(subtropicus.holo,col = 8)
spheres3d(template_array[1:82,,],radius = 0.2,col = 1)#fixed. nb of landmarks = (  z-1)/3  82
spheres3d(template_array[83:231,,],radius = 0.1,col = 2) #curves 185
spheres3d(template_array[232:376,,],radius = 0.1,col = 3) #patches 145
text3d(template_array[1:376,,], texts = c(1:376), asp = FALSE, cex = 1, col="blue", pos = 3) #plot number of landmarks to check ordering
#import landmark sets for all specimens
LMcoords <- t(read.csv('../Data/Antechinus_LMcoordstest.csv', header = T, row.names = 1))
dim(LMcoords)
Ants <- arrayspecs(LMcoords, 82, 3) #convert into array
Ants <- arrayspecs(LMcoords, 82, 3) #convert into array
knitr::opts_knit$set(root.dir = 'C:/Users/pietro/Desktop/Pietro/Specimens', echo = TRUE)
#load libraries
library(ggplot2)
#Import 3D coordinates from all specimens
coords.3D <- t (read.csv("Data/LMcoords_Dhallucatus.csv", header = TRUE, row.names = 1))
dim(coords.3D)
#Convert 2D metadata into a 3D array
A <- arrayspecs(coords.3D, 900, 3)
dim(A)
#import landmark sets for all specimens
LMcoords <- t(read.csv('../Data/Antechinus_LMcoordstest.csv', header = T, row.names = 1))
dim(LMcoords)
Ants <- arrayspecs(LMcoords, 82, 3) #convert into array
LMcoords
LMcoords[,247]
LMcoords[,246]
LMcoords<-LMcoords[,1:246]
Ants <- arrayspecs(LMcoords, 82, 3) #convert into array
dim(Ants)
Ants[,,1]
subtropicus.p
Antd
Ants
LMcoords
dim(LMcoords)
rownames(LMcoords)<-LMcoords$V1
s
dim(Ants)
Ahead <- head(dimnames(Ants))[3]
Ahead
# specify fixed landmarks of template specimen in a matrix
fixed<-as.matrix(template_array[c(1:82),,])
# specify semilandmarks of template specimen in a matrix
patch<-as.matrix(template_array[c(83:376),,])
rownames(patch)<-c(1:294)
#Atlas creation
Atlas<-createAtlas(subtropicus.holo,landmarks = fixed, patch = patch, patchCurves = list(c(1:3, c(4:6), c(7:9), c(10:12), c(13:20), c(21:23), c(24:26), c(27:29), c(30:32), c(33:36), c(37:40), c(41:43), c(44:46), c(47:51), c(52:56), c(57:59), c(60:63), c(64:66), c(67:70), c(71:75), c(76:78), c(79:81), c(82:85), c(86:89), c(90:93), c(94:97), c(98:100), c(101:103), c(104:106), c(107:111), c(112:114), c(115:119), c(120:124), c(125:129), c(130:132), c(133:135), c(136:138), c(139:146), c(147:149), c(150:294))))
#Atlas plot
cols<-c("black","red","green","blue")
plotAtlas(Atlas, pt.size=0.2, point = "s", legend = TRUE, cols = cols)
#Folder with all meshes
Folder <- "../Data/3Dmodels/AntechinusTest/"
#Navigate to folder with the subsample of ply files
Plylist <- sub(".ply", "", list.files(Folder))
#extract the coordinates that correspond to the ply files - note the dimnames and the ply file names need to be identical
#match ply file names with data names and reorder
match(Plylist, dimnames(Ants)[[3]])
Plylist==dimnames(Ants)[[3]]
data_reorder<-Ants[, , match(Plylist, dimnames(Ants)[[3]])]
names_reorder<-dimnames(data_reorder)[[3]]
match(names_reorder, Plylist)
dimnames(data_reorder)[[3]] == Plylist
nma<-list.files(path="../Data/3Dmodels/AntechinusTest/")
listo<-do.call(list,lapply(nma,function(x) file2mesh(x,readcol=F,clean=T)))
nma
nma<-list.files(path="../Data/3Dmodels/AntechinusTest/meshes")
listo<-do.call(list,lapply(nma,function(x) file2mesh(x,readcol=F,clean=T)))
#import landmark sets for all specimens
LMcoords <- t(read.csv('../Data/3Dmodels/AntechinusTest/Antechinus_LMcoords.csv', header = T, row.names = 1))
#import landmark sets for all specimens
LMcoords <- t(read.csv('../Data/3Dmodels/AntechinusTest/coords/Antechinus_LMcoords.csv', header = T, row.names = 1))
dim(LMcoords)
LMcoords<-LMcoords[,1:246]
Ants <- arrayspecs(LMcoords, 82, 3) #convert into array
dim(Ants)
Ahead <- head(dimnames(Ants))[3]
knitr::opts_knit$set(root.dir = '../Viacavaetal_Antechinus/Data', echo = TRUE)
library(Morpho)
library(rgl)
library(Rvcg)
library(geomorph)
library(abind)
## import template mesh and landmark set
subtropicus.holo<-file2mesh('../Data/3Dmodels/Asubtropicus/J17407.ply',readcol=F,clean=T)
subtropicus.p<-(read.csv('../Data/Templatecoords.csv', header = F))
dim(subtropicus.p)
rownames(subtropicus.p)<-subtropicus.p$V1
subtropicus.p1 <- subtropicus.p[,-1]
dim(subtropicus.p1) #412 landmarks, 3 dimensions
#reordering landmarks: curves first, patches second and curves last
template.pf <- subtropicus.p1[1:82,]
template.pc <- subtropicus.p1[83:267,]
template.pp <- subtropicus.p1[268:412,]
template.p <- rbind(template.pf, template.pc, template.pp)
template.p1 <- template.p[-c(83,96,131:138,152:153,158:163,167:168,173:182,232:233,244:247),]
#VW trying to get this into an array - first turn each column into a vector
V2 <-template.p1$V2
V3 <-template.p1$V3
V4 <- template.p1$V4
template_array <- array(c(V2, V3, V4), dim = c(376, 3, 1))
#plot landmarks on mesh to check if they correspond well
shade3d(subtropicus.holo,col = 8)
spheres3d(template_array[1:82,,],radius = 0.2,col = 1)#fixed. nb of landmarks = (  z-1)/3  82
spheres3d(template_array[83:231,,],radius = 0.1,col = 2) #curves 185
spheres3d(template_array[232:376,,],radius = 0.1,col = 3) #patches 145
text3d(template_array[1:376,,], texts = c(1:376), asp = FALSE, cex = 1, col="blue", pos = 3) #plot number of landmarks to check ordering
#import landmark sets for all specimens
LMcoords <- t(read.csv('../Data/3Dmodels/AntechinusTest/coords/Antechinus_LMcoords.csv', header = T, row.names = 1))
dim(LMcoords)
Ants <- arrayspecs(LMcoords, 82, 3) #convert into array
dim(Ants)
Ahead <- head(dimnames(Ants))[3]
# specify fixed landmarks of template specimen in a matrix
fixed<-as.matrix(template_array[c(1:82),,])
# specify semilandmarks of template specimen in a matrix
patch<-as.matrix(template_array[c(83:376),,])
rownames(patch)<-c(1:294)
#Atlas creation
Atlas<-createAtlas(subtropicus.holo,landmarks = fixed, patch = patch, patchCurves = list(c(1:3, c(4:6), c(7:9), c(10:12), c(13:20), c(21:23), c(24:26), c(27:29), c(30:32), c(33:36), c(37:40), c(41:43), c(44:46), c(47:51), c(52:56), c(57:59), c(60:63), c(64:66), c(67:70), c(71:75), c(76:78), c(79:81), c(82:85), c(86:89), c(90:93), c(94:97), c(98:100), c(101:103), c(104:106), c(107:111), c(112:114), c(115:119), c(120:124), c(125:129), c(130:132), c(133:135), c(136:138), c(139:146), c(147:149), c(150:294))))
#Atlas plot
cols<-c("black","red","green","blue")
plotAtlas(Atlas, pt.size=0.2, point = "s", legend = TRUE, cols = cols)
#Folder with all meshes
Folder <- "../Data/3Dmodels/AntechinusTest/"
#Navigate to folder with the subsample of ply files
Plylist <- sub(".ply", "", list.files(Folder))
match(Plylist, dimnames(Ants)[[3]])
Plylist==dimnames(Ants)[[3]]
data_reorder<-Ants[, , match(Plylist, dimnames(Ants)[[3]])]
names_reorder<-dimnames(data_reorder)[[3]]
match(names_reorder, Plylist)
dimnames(data_reorder)[[3]] == Plylist
names_reorder<-dimnames(data_reorder)[[3]]
match(names_reorder, Plylist)
match(Plylist, dimnames(Ants)[[3]])
#Folder with all meshes
Folder <- "../Data/3Dmodels/AntechinusTest/meshes"
#Navigate to folder with the subsample of ply files
Plylist <- sub(".ply", "", list.files(Folder))
match(Plylist, dimnames(Ants)[[3]])
Plylist==dimnames(Ants)[[3]]
data_reorder<-Ants[, , match(Plylist, dimnames(Ants)[[3]])]
names_reorder<-dimnames(data_reorder)[[3]]
match(names_reorder, Plylist)
dimnames(data_reorder)[[3]] == Plylist
nma<-list.files(path="../Data/3Dmodels/AntechinusTest/meshes")
listo<-do.call(list,lapply(nma,function(x) file2mesh(x,readcol=F,clean=T)))
setwd("../Data/3Dmodels/AntechinusTest")
provo<-placePatch(Atlas,data_reorder,path="../Data/3Dmodels/AntechinusTest",
inflate=0.5)
nma<-list.files(path="../Data/3Dmodels/AntechinusTest/meshes")
listo<-do.call(list,lapply(nma,function(x) file2mesh(x,readcol=F,clean=T)))
setwd("C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/meshes/")
nma<-list.files(path="../Data/3Dmodels/AntechinusTest/meshes")
listo<-do.call(list,lapply(nma,function(x) file2mesh(x,readcol=F,clean=T)))
nma<-list.files(path="../Data/3Dmodels/AntechinusTest/meshes")
listo<-do.call(list,lapply(nma,function(x) file2mesh(x,readcol=F,clean=T)))
knitr::opts_knit$set(root.dir = 'Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/meshes/', echo = TRUE)
knitr::opts_knit$set(root.dir = 'Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/meshes/', echo = TRUE)
#Folder with all meshes
Folder <- "../Data/3Dmodels/AntechinusTest/meshes"
#Navigate to folder with the subsample of ply files
Plylist <- sub(".ply", "", list.files(Folder))
#extract the coordinates that correspond to the ply files - note the dimnames and the ply file names need to be identical
#match ply file names with data names and reorder
match(Plylist, dimnames(Ants)[[3]])
Plylist==dimnames(Ants)[[3]]
data_reorder<-Ants[, , match(Plylist, dimnames(Ants)[[3]])]
names_reorder<-dimnames(data_reorder)[[3]]
match(names_reorder, Plylist)
dimnames(data_reorder)[[3]] == Plylist
nma<-list.files(path="../Data/3Dmodels/AntechinusTest/meshes")
listo<-do.call(list,lapply(nma,function(x) file2mesh(x,readcol=F,clean=T)))
nma<-list.files(path="../Data/3Dmodels/AntechinusTest/meshes")
nma
getwd()
knitr::opts_knit$set(root.dir = 'Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/meshes/', echo = TRUE)
#Folder with all meshes
Folder <- "../Data/3Dmodels/AntechinusTest/meshes"
#Navigate to folder with the subsample of ply files
Plylist <- sub(".ply", "", list.files(Folder))
#extract the coordinates that correspond to the ply files - note the dimnames and the ply file names need to be identical
#match ply file names with data names and reorder
match(Plylist, dimnames(Ants)[[3]])
Plylist==dimnames(Ants)[[3]]
data_reorder<-Ants[, , match(Plylist, dimnames(Ants)[[3]])]
names_reorder<-dimnames(data_reorder)[[3]]
match(names_reorder, Plylist)
dimnames(data_reorder)[[3]] == Plylist
nma<-list.files(path="../Data/3Dmodels/AntechinusTest/meshes")
listo<-do.call(list,lapply(nma,function(x) file2mesh(x,readcol=F,clean=T)))
listo<-do.call(list,lapply(nma,function(x) file2mesh(x,readcol=F,clean=T)))
listo<-do.call(list,lapply(nma,function(x) file2mesh(x,readcol=F,clean=T)))
dimnames(data_reorder)[[3]] == Plylist
setwd("C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/meshes/")
setwd("C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/meshes/")
knitr::opts_knit$set(root.dir = 'Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/meshes/', echo = TRUE)
#Folder with all meshes
Folder <- "../Data/3Dmodels/AntechinusTest/meshes"
#Navigate to folder with the subsample of ply files
Plylist <- sub(".ply", "", list.files(Folder))
#extract the coordinates that correspond to the ply files - note the dimnames and the ply file names need to be identical
#match ply file names with data names and reorder
match(Plylist, dimnames(Ants)[[3]])
Plylist==dimnames(Ants)[[3]]
data_reorder<-Ants[, , match(Plylist, dimnames(Ants)[[3]])]
names_reorder<-dimnames(data_reorder)[[3]]
match(names_reorder, Plylist)
dimnames(data_reorder)[[3]] == Plylist
setwd("C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/meshes/")
nma<-list.files(path="../Data/3Dmodels/AntechinusTest/meshes")
listo<-do.call(list,lapply(nma,function(x) file2mesh(x,readcol=F,clean=T)))
#semilandmark placement in all specimenes
lmplacement<-placePatch(Atlas, data_reorder, path="../Data/3Dmodels/AntechinusTest/", inflate=0.5) # use ray=TRUE for projection along surface normals instead of closest point???
#check good placement of semilandmarks in all specimens
checkLM(lmplacement, path = "../Data/3Dmodels/AntechinusTest/", atlas=Atlas, point = "s", pt.size = 0.2)
nma<-list.files(path="../Data/3Dmodels/AntechinusTest/meshes")
listo<-do.call(list,lapply(nma,function(x) file2mesh(x,readcol=F,clean=T)))
knitr::opts_knit$set(root.dir = 'Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/meshes/', echo = TRUE)
#Folder with all meshes
Folder <- "../Data/3Dmodels/AntechinusTest/meshes"
#Navigate to folder with the subsample of ply files
Plylist <- sub(".ply", "", list.files(Folder))
#extract the coordinates that correspond to the ply files - note the dimnames and the ply file names need to be identical
#match ply file names with data names and reorder
match(Plylist, dimnames(Ants)[[3]])
Plylist==dimnames(Ants)[[3]]
data_reorder<-Ants[, , match(Plylist, dimnames(Ants)[[3]])]
names_reorder<-dimnames(data_reorder)[[3]]
match(names_reorder, Plylist)
dimnames(data_reorder)[[3]] == Plylist
setwd("C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/meshes/")
nma<-list.files(path="../Data/3Dmodels/AntechinusTest/meshes")
listo<-do.call(list,lapply(nma,function(x) file2mesh(x,readcol=F,clean=T)))
#semilandmark placement in all specimenes
lmplacement<-placePatch(Atlas, data_reorder, path="../Data/3Dmodels/AntechinusTest/", inflate=0.5) # use ray=TRUE for projection along surface normals instead of closest point???
#check good placement of semilandmarks in all specimens
checkLM(lmplacement, path = "../Data/3Dmodels/AntechinusTest/", atlas=Atlas, point = "s", pt.size = 0.2)
listo
knitr::opts_knit$set(root.dir = '../Viacavaetal_Antechinus/Data', echo = TRUE)
library(Morpho)
library(rgl)
library(Rvcg)
library(geomorph)
library(abind)
nma<-list.files(path="../Data/3Dmodels/AntechinusTest/meshes")
listo<-do.call(list,lapply(nma,function(x) file2mesh(x,readcol=F,clean=T)))
getwd()
listo<-do.call(list,lapply(nma,function(x) file2mesh(x,readcol=F,clean=T)))
listo
mfrow3d(2,3,sharedMouse = T)
shade3d(subtropicus.holo,col=8)
spheres3d(template_array[1:82,,],radius = 0.2,col = 1)#fixed. nb of landmarks = (  z-1)/3  82
spheres3d(template_array[83:231,,],radius = 0.1,col = 2) #curves 185
spheres3d(template_array[232:376,,],radius = 0.1,col = 3)
for(i in 1:dim(data_reorder)[[3]]){
next3d()
shade3d(listo[[i]],col=8)
spheres3d(provo[1:82,,i],radius=0.2,col=1)
spheres3d(provo[83:231,,i],radius=0.2,col=2)
spheres3d(provo[232:376,,i],radius=0.2,col=3)
}
provo<-placePatch(Atlas,data_reorder,path="../Data/3Dmodels/AntechinusTest",
inflate=0.5)
?placePatch
provo<-placePatch(Atlas,data_reorder,path="../Data/3Dmodels/AntechinusTest/meshes/",
inflate=0.5)
mfrow3d(2,3,sharedMouse = T)
shade3d(subtropicus.holo,col=8)
shade3d(subtropicus.holo,col=8)
spheres3d(template_array[1:82,,],radius = 0.2,col = 1)#fixed. nb of landmarks = (  z-1)/3  82
spheres3d(template_array[1:82,,],radius = 0.2,col = 1)#fixed. nb of landmarks = (  z-1)/3  82
spheres3d(template_array[83:231,,],radius = 0.1,col = 2) #curves 185
spheres3d(template_array[232:376,,],radius = 0.1,col = 3)
for(i in 1:dim(data_reorder)[[3]]){
next3d()
shade3d(listo[[i]],col=8)
spheres3d(provo[1:82,,i],radius=0.2,col=1)
spheres3d(provo[83:231,,i],radius=0.2,col=2)
spheres3d(provo[232:376,,i],radius=0.2,col=3)
}
