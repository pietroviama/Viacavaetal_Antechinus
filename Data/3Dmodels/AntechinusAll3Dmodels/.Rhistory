prueba
prueba<- read.csv("C:/Users/pietro/Desktop/Pietro/shapedata")
prueba
prueba1<-array2mat(prueba, 129, 246)
prueba<- read.csv("C:/Users/pietro/Desktop/Pietro/prectemp")
prueba
attributes(coords.3D)
class(coords.3D)
prueba2 <- t(read.csv("C:/Users/pietro/Desktop/Pietro/shapedata"))
prueba2
class(prueba3)
class(prueba2)
prueba2 <- t(read.csv("C:/Users/pietro/Desktop/Pietro/shapedata"), header = TRUE, row.names=1)
#Import 3D coordinates from all specimens
coords.3D <- t (read.csv("C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/Antechinus_LMcoords.csv", header = TRUE, row.names = 1))
prueba2 <- t(read.csv("C:/Users/pietro/Desktop/Pietro/shapedata", header = TRUE, row.names=1))
prueba2
knitr::opts_knit$set(root.dir = '../Viacavaetal_Antechinus/Data', echo = TRUE)
#load libraries
library(ggplot2)
library(digest)
library(rgl)
library(geomorph)
library(vegan) # vegan version 2.4-4
library(Morpho)
library(ape)
library(raster)
library(sp)
library(MASS)
library(RColorBrewer)
library(shapes)
library(ALA4R)
library(ggsignif)
if(!require(devtools)) install.packages("devtools")
library(devtools)
devtools::install_github("TGuillerme/landvR")
#Import 3D coordinates from all specimens
coords.3D <- t (read.csv("C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/Antechinus_LMcoords.csv", header = TRUE, row.names = 1))
dim(coords.3D)
#Convert 2D metadata into a 3D array
A <- arrayspecs(coords.3D, 82, 3)
dim(A)
Ahead <- head(dimnames(A))[3]
#Load the classifier
antechinusdata <- read.csv("C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/Antechinus_data.csv", header=T)
dim(antechinusdata)
Data.species <- antechinusdata$Species
is.factor(Data.species) # check that it is a factor
#give museum ID row names to quolls data
rownames(antechinusdata)<-antechinusdata$ID
####Rearrange coordinate names and classifier file names in the same order
names_array <- dimnames(A)[[3]]
names_classifier <- rownames(antechinusdata)
match(names_array, names_classifier)
A_reorder <- A[,,match(names_classifier, names_array)]
names_Areorder <- dimnames(A_reorder)[[3]]
match(names_Areorder, names_classifier)
#CLEANED VERY ROUGHLY, RECHECK SPECIMENS THAT CAN BE INCLUDED IN THE ANALYSIS
A_reorder <- A_reorder[,,-c(which(antechinusdata$Age=="Juvenile?"), which(antechinusdata$Population=="adustus?"), which(antechinusdata$Population=="agilis?"), which(antechinusdata$ID=="CM3642"))]
antechinusdata <- antechinusdata[-c(which(antechinusdata$Age=="Juvenile?"), which(antechinusdata$Population=="adustus?"), which(antechinusdata$Population=="agilis?"), which(antechinusdata$ID=="CM3642")),]
antechinusdata <- droplevels(antechinusdata)
#####DO THAT######
gpaall<-gpagen(A_reorder, curves = NULL, surfaces = NULL, PrinAxes = TRUE,
max.iter = NULL, ProcD = TRUE, Proj = TRUE, print.progress = TRUE)
#include precipitation and temperature data from worldclim
rclim<- getData("worldclim",var="bio",res=10) #run in console
rclim <- rclim[[c(1,12)]]
names(rclim) <- c("Temp","Prec")
lons <- antechinusdata$Longitude
lats <- antechinusdata$Latitude
coordsgps <- data.frame(lons, lats)
valuestemp <- extract(rclim,coordsgps)
dfwtemp <- cbind.data.frame(coordsgps,valuestemp)
dfwtemp
#frame data for geomorph
gdfante <- geomorph.data.frame(gpaall, Species = antechinusdata$Species, Population = antechinusdata$Population, ID = antechinusdata$ID, Sex = antechinusdata$Sex, Latitude = antechinusdata$Latitude, Longitude = antechinusdata$Longitude, Altitude = antechinusdata$Altitude, Dat_coll = antechinusdata$Date.collected, Collection = antechinusdata$Collection,
tempworldclim = dfwtemp$Prec, tempworldclim = dfwtemp$Temp, Age = antechinusdata$Age, doubt = antechinusdata$doubt)
PCAante <- plotTangentSpace(gdfante$coords, warpgrids = FALSE, mesh = FALSE, groups = gdfante$Population, legend = gdfante$ID, label = gdfante$ID)
summary(PCAante)
cols<-brewer.pal(n=5,name="Set1")
cols_dat<-cols[gdfante$Population]
PCAanteplot <- plot(PCAante$pc.scores[,1], PCAante$pc.scores[,2], col = cols_dat, pch = c(16:18)[factor(gdfante$Sex)], cex = 2, asp = T, xlab="Principal Component 1 (19.68%)", ylab="Principal Component 2 (8.55%)")
Population <- gdfante$Population
Sex <- gdfante$Sex
dataPCA <- data.frame(PCAante$pc.scores[,1], PCAante$pc.scores[,2], Population, Sex)
plotPCA <- ggplot(dataPCA, aes(x=PCAante.pc.scores...1., y=PCAante.pc.scores...2., colour = Population, shape = Sex)) +
labs(x = "PC 1 (19.68%)", y = "PC 2 (8.55%)") +
scale_color_manual(values = c("grey", "red", "blue", "darkgreen", "orange")) +
geom_point(size = 8, alpha = 0.8) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.text = element_text(size = 25), legend.title = element_text(size = 25), axis.title.x = element_text(size = 25), axis.title.y = element_text(size = 25), axis.text = element_text(size = 20), legend.justification = "center")
plot(plotPCA)
plot(plotPCA)
text(PCAante$pc.scores[,1], PCAante$pc.scores[,2], labels=gdfante$ID, pos=4)
PCAanteplot <- plot(PCAante$pc.scores[,1], PCAante$pc.scores[,2], col = cols_dat, pch = c(16:18)[factor(gdfante$Sex)], cex = 2, asp = T, xlab="Principal Component 1 (19.68%)", ylab="Principal Component 2 (8.55%)")
text(PCAante$pc.scores[,1], PCAante$pc.scores[,2], labels=gdfante$ID, pos=4)
text(PCAante$pc.scores[,1], PCAante$pc.scores[,2], labels=gdfante$ID, pos=4)
PCAanteplot <- plot(PCAante$pc.scores[,1], PCAante$pc.scores[,2], col = cols_dat, pch = c(16:18)[factor(gdfante$Sex)], cex = 2, asp = T, xlab="Principal Component 1 (19.68%)", ylab="Principal Component 2 (8.55%)")
text(PCAante$pc.scores[,1], PCAante$pc.scores[,2], labels=gdfante$ID, pos=4)
16 ln(2) + 31
16ln(2) + 31
knitr::opts_knit$set(root.dir = '../Viacavaetal_Antechinus/Data', echo = TRUE)
library(Morpho)
library(rgl)
library(Rvcg)
library(geomorph)
library(abind)
subtropicus.holo<-file2mesh('C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusAll3Dmodels/J17407.ply',readcol=F,clean=T)
subtropicus.p<-(read.csv('C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/Templatecoords.csv', header = F))
dim(subtropicus.p)
rownames(subtropicus.p)<-subtropicus.p$V1
subtropicus.p1 <- subtropicus.p[,-1]
dim(subtropicus.p1) #412 landmarks, 3 dimensions
subtropicus.p
subtropicus.p[1,]
subtropicus.p[82,]
subtropicus.p[83,]
subtropicus.p[266,]
subtropicus.p[267,]
subtropicus.p[268,]
subtropicus.p[412,]
subtropicus.p[413,]
subtropicus.p[83,]
subtropicus.p[96,]
subtropicus.p[131,]
subtropicus.p[138,]
subtropicus.p[152,]
subtropicus.p[163,]
subtropicus.p[167,]
subtropicus.p[182,]
subtropicus.p[232,]
subtropicus.p[233,]
subtropicus.p[244,]
subtropicus.p[26,]
subtropicus.p[246,]
dim(subtropicus.p)
rownames(subtropicus.p)<-subtropicus.p$V1
subtropicus.p1 <- subtropicus.p[,-1]
dim(subtropicus.p1) #412 landmarks, 3 dimensions
#reordering landmarks: curves first, patches second and curves last
template.pf <- subtropicus.p1[1:82,]
template.pc <- subtropicus.p1[83:267,]
template.pp <- subtropicus.p1[268:412,]
template.p <- rbind(template.pf, template.pc, template.pp)
template.p1 <- template.p[-c(83,96,131:138,152:153,158:163,167:168,173:182,232:233,244:247),]
#VW trying to get this into an array - first turn each column into a vector
V2 <-template.p1$V2
V3 <-template.p1$V3
V4 <- template.p1$V4
template_array <- array(c(V2, V3, V4), dim = c(376, 3, 1))
dim(template.p1)
template_array <- array(c(V2, V3, V4), dim = c(376, 3, 1))
#plot landmarks on mesh to check if they correspond well
shade3d(subtropicus.holo,col = 8)
spheres3d(template_array[1:82,,],radius = 0.2,col = 1)#fixed. nb of landmarks = (  z-1)/3  82
spheres3d(template_array[83:231,,],radius = 0.1,col = 2) #curves 185
spheres3d(template_array[232:376,,],radius = 0.1,col = 3) #patches 145
text3d(template_array[1:376,,], texts = c(1:376), asp = FALSE, cex = 1, col="blue", pos = 3) #plot number of landmarks to check ordering
#import landmark sets for all specimens
LMcoords <- t(read.csv('C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/Antechinus_LMcoords.csv', header = T, row.names = 1))
dim(LMcoords)
Ants <- arrayspecs(LMcoords, 82, 3) #convert into array
dim(Ants)
Ahead <- head(dimnames(Ants))[3]
# specify fixed landmarks of template specimen in a matrix
fixed<-as.matrix(template_array[c(1:82),,])
# specify semilandmarks of template specimen in a matrix
patch<-as.matrix(template_array[c(83:376),,])
rownames(patch)<-c(1:294)
patch
dim(patch)
#Atlas creation
Atlas<-createAtlas(subtropicus.holo,landmarks = fixed, patch = patch, patchCurves = list(c(1:3, c(4:6), c(7:9), c(10:12), c(13:20), c(21:23), c(24:26), c(27:29), c(30:32), c(33:36), c(37:40), c(41:43), c(44:46), c(47:51), c(52:56), c(57:59), c(60:63), c(64:66), c(67:70), c(71:75), c(76:78), c(79:81), c(82:85), c(86:89), c(90:93), c(94:97), c(98:100), c(101:103), c(104:106), c(107:111), c(112:114), c(115:119), c(120:124), c(125:129), c(130:132), c(133:135), c(136:138), c(139:146), c(147:149), c(150:294))))
#Atlas plot
cols<-c("black","red","green","blue")
plotAtlas(Atlas, pt.size=0.2, point = "s", legend = TRUE, cols = cols)
dim(LMcoords)
LMcoords
LMcoords[,1]
LMcoords=="CDT8"
LMcoords[,1]
knitr::opts_knit$set(root.dir = 'Viacavaetal_Antechinus/Data/3Dmodels/AntechinusAll3Dmodels/', echo = TRUE)
#Folder with all meshes
Folder <- "../Data/3Dmodels/AntechinusAll3Dmodels"
#Navigate to folder with the subsample of ply files
Plylist <- sub(".ply", "", list.files(Folder))
Plylist
match(Plylist, dimnames(Ants)[[3]])
Plylist==dimnames(Ants)[[3]]
data_reorder<-Ants[, , match(Plylist, dimnames(Ants)[[3]])]
names_reorder<-dimnames(data_reorder)[[3]]
match(names_reorder, Plylist)
dimnames(data_reorder)[[3]] == Plylist
setwd("C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusAll3Dmodels/") #does not work with Rmd, run separately
nma<-list.files(path="../Data/3Dmodels/AntechinusAll3Dmodels")
nma
listo<-do.call(list,lapply(nma,function(x) file2mesh(x,readcol=F,clean=T)))
nma<-list.files(path="../Data/3Dmodels/AntechinusAll3Dmodels")
listo<-do.call(list,lapply(nma,function(x) file2mesh(x,readcol=F,clean=T)))
Plylist
list()
list
?do.call
nma
listo<-do.call(list,lapply(nma,function(x) file2mesh(x,readcol=F,clean=T)))
listo<-do.call(Plylist,lapply(nma,function(x) file2mesh(x,readcol=F,clean=T)))
listo<-do.call(list,lapply(nma,function(x) file2mesh(x,readcol=F,clean=T)))
setwd("C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusAll3Dmodels/") #does not work with Rmd, run separately
nma<-list.files(path="../Data/3Dmodels/AntechinusAll3Dmodels")
listo<-do.call(list,lapply(nma,function(x) file2mesh(x,readcol=F,clean=T)))
lmplacement<-placePatch(Atlas, data_reorder, path="../Data/3Dmodels/AntechinusTest/", inflate=0.5) # use ray=TRUE for projection along surface normals instead of closest point???
listo<-do.call(list,lapply(nma,function(x) file2mesh(x,readcol=F,clean=T)))
lmplacement<-placePatch(Atlas, data_reorder, path="../Data/3Dmodels/AntechinusAll3Dmodels/", inflate=0.5) # use ray=TRUE for projection along surface normals instead of closest point???
#check good placement of semilandmarks in all specimens
checkLM(lmplacement, path = "../Data/3Dmodels/AntechinusAll3Dmodels/", atlas=Atlas, point = "s", pt.size = 0.2)
setwd("../Data/3Dmodels/AntechinusAll3Dmodels")
provo<-placePatch(Atlas,data_reorder,path="../Data/3Dmodels/AntechinusAll3Dmodels/",
inflate=0.5)
mfrow3d(2,3,sharedMouse = T)
shade3d(subtropicus.holo,col=8)
spheres3d(template_array[1:82,,],radius = 0.2,col = 1)#fixed. nb of landmarks = (  z-1)/3  82
spheres3d(template_array[83:231,,],radius = 0.1,col = 2) #curves 185
spheres3d(template_array[232:376,,],radius = 0.1,col = 3)
for(i in 1:dim(data_reorder)[[3]]){
next3d()
shade3d(listo[[i]],col=8)
spheres3d(provo[1:82,,i],radius=0.2,col=1)
spheres3d(provo[83:231,,i],radius=0.2,col=2)
spheres3d(provo[232:376,,i],radius=0.2,col=3)
}
equi<-matrix(NA,ncol =3)
disto<-NULL
for(i in 1:dim(provo)[[3]]){
ccc<-provo[221:228,,i]
disto[i]<-list(equidistantCurve(ccc,iterations=10,increment=6,smoothit=4,mesh=listo[[i]]))
equi<-array(as.numeric(unlist(disto)),dim=dim(provo[221:228,,]))
}
new.prov<-bindArr(provo[1:220,,],equi,provo[229:376,,],along=1)
newi<-new.prov[-c(115:122,142:145,149:152),,]
mfrow3d(2,3,sharedMouse = T)
mfrow3d(1,2,sharedMouse = T)
shade3d(tempmesh,col=8)
mfrow3d(1,2,sharedMouse = T)
shade3d(tempmesh,col=8)
spheres3d(templa[1:82,],radius=0.2,col=1)
spheres3d(templa[83:231,],radius=0.2,col=2)
spheres3d(templa[232:376,],radius=0.2,col=3)
for(i in 1:dim(new.prov)[[3]]){
next3d()
shade3d(listo[[i]],col=8)
spheres3d(new.prov[1:82,,i],radius=0.2,col=1)
spheres3d(new.prov[83:231,,i],radius=0.1,col=2)
spheres3d(new.prov[232:376,,i],radius=0.1,col=3)
}
meshi<-vcgQEdecim(listo[[2]],percent = 0.05)
shade3d(meshi,col=8)
writeWebGL("new.html")
#Import 3D coordinates from all specimens
coords.3D <- t (read.csv("C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/Antechinus_LMcoords.csv", header = TRUE, row.names = 1))
dim(coords.3D)
#Convert 2D metadata into a 3D array
A <- arrayspecs(coords.3D, 82, 3)
dim(A)
Ahead <- head(dimnames(A))[3]
#Load the classifier
antechinusdata <- read.csv("C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/Antechinus_data.csv", header=T)
dim(antechinusdata)
Data.species <- antechinusdata$Species
is.factor(Data.species) # check that it is a factor
#give museum ID row names to quolls data
rownames(antechinusdata)<-antechinusdata$ID
####Rearrange coordinate names and classifier file names in the same order
names_array <- dimnames(A)[[3]]
names_classifier <- rownames(antechinusdata)
match(names_array, names_classifier)
A_reorder <- A[,,match(names_classifier, names_array)]
names_Areorder <- dimnames(A_reorder)[[3]]
match(names_Areorder, names_classifier)
#CLEANED VERY ROUGHLY, RECHECK SPECIMENS THAT CAN BE INCLUDED IN THE ANALYSIS
A_reorder <- A_reorder[,,-c(which(antechinusdata$Age=="Juvenile?"), which(antechinusdata$Population=="adustus?"), which(antechinusdata$Population=="agilis?"), which(antechinusdata$ID=="CM3642"))]
antechinusdata <- antechinusdata[-c(which(antechinusdata$Age=="Juvenile?"), which(antechinusdata$Population=="adustus?"), which(antechinusdata$Population=="agilis?"), which(antechinusdata$ID=="CM3642")),]
antechinusdata <- droplevels(antechinusdata)
#####DO THAT######
gpaall<-gpagen(A_reorder, curves = NULL, surfaces = NULL, PrinAxes = TRUE,
max.iter = NULL, ProcD = TRUE, Proj = TRUE, print.progress = TRUE)
#include precipitation and temperature data from worldclim
rclim<- getData("worldclim",var="bio",res=10) #run in console
rclim <- rclim[[c(1,12)]]
names(rclim) <- c("Temp","Prec")
lons <- antechinusdata$Longitude
lats <- antechinusdata$Latitude
coordsgps <- data.frame(lons, lats)
valuestemp <- extract(rclim,coordsgps)
dfwtemp <- cbind.data.frame(coordsgps,valuestemp)
dfwtemp
#frame data for geomorph
gdfante <- geomorph.data.frame(gpaall, Species = antechinusdata$Species, Population = antechinusdata$Population, ID = antechinusdata$ID, Sex = antechinusdata$Sex, Latitude = antechinusdata$Latitude, Longitude = antechinusdata$Longitude, Altitude = antechinusdata$Altitude, Dat_coll = antechinusdata$Date.collected, Collection = antechinusdata$Collection,
tempworldclim = dfwtemp$Prec, tempworldclim = dfwtemp$Temp, Age = antechinusdata$Age, doubt = antechinusdata$doubt)
fit.size <- procD.lm(f1 = coords~Csize, data = gdfante, print.progress = FALSE)
fit.size$residuals
dim(fit.size$residuals)
246/3
main_residuals3D <- arrayspecs(fit.size$residuals, 246, 3)
main_residuals3D <- arrayspecs(fit.size$residuals, 246, 3)
fit.size <- procD.lm(f1 = coords~Csize, data = gdfante, print.progress = FALSE)
fit.size <- procD.lm(f1 = coords~Csize, data = gdfante, print.progress = FALSE)
main_residuals3D <- arrayspecs(fit.size$residuals, 246, 3)
dim(fit.size$residuals)
main_residuals3D <- arrayspecs(fit.size$residuals, 82, 3)
allom_resplusconsensus <- main_residuals3D + array(gpaall$consensus,dim(main_residuals3D))
allom_resplusconsensus
allom_resplusconsensus <- allom_resplusconsensus[,,-c(which(antechinusdata$Population=="?"), which(antechinusdata$Population=="subtropicus holotype"))]
allom_resplusconsensuspop <- allom_resplusconsensus[,,-c(which(antechinusdata$Population=="?"), which(antechinusdata$Population=="subtropicus holotype"))]
gpaallpop<-gpagen(allom_resplusconsensuspop, curves = NULL, surfaces = NULL, PrinAxes = TRUE,
max.iter = NULL, ProcD = TRUE, Proj = TRUE, print.progress = TRUE)
gparesallpop<-gpagen(allom_resplusconsensuspop, curves = NULL, surfaces = NULL, PrinAxes = TRUE,
max.iter = NULL, ProcD = TRUE, Proj = TRUE, print.progress = TRUE)
gparespop<-gpagen(allom_resplusconsensuspop, curves = NULL, surfaces = NULL, PrinAxes = TRUE,
max.iter = NULL, ProcD = TRUE, Proj = TRUE, print.progress = TRUE)
dim(antechinusdatapop)
A_reorderpop <- A_reorder[,,-c(which(antechinusdata$Population=="?"), which(antechinusdata$Population=="subtropicus holotype"))]
antechinusdatapop <- antechinusdata[-c(which(antechinusdata$Population=="?"), which(antechinusdata$Population=="subtropicus holotype")),]
antechinusdatapop <- droplevels(antechinusdatapop)
gpaallpop<-gpagen(A_reorderpop, curves = NULL, surfaces = NULL, PrinAxes = TRUE,
max.iter = NULL, ProcD = TRUE, Proj = TRUE, print.progress = TRUE)
rclim<- getData("worldclim",var="bio",res=10) #run in console
rclimpop <- rclim[[c(1,12)]]
names(rclimpop) <- c("Temp","Prec")
lonspop <- antechinusdatapop$Longitude
latspop <- antechinusdatapop$Latitude
coordsgpspop <- data.frame(lonspop, latspop)
valuestemppop <- extract(rclimpop,coordsgpspop)
dfwtemppop <- cbind.data.frame(coordsgpspop,valuestemppop)
dfwtemppop
antegps <- data.frame(antechinusdatapop$Latitude, antechinusdatapop$Longitude)
evariables <- c("el830", "el674")
retrieved.evariables <- intersect_points(antegps, evariables)
retrieved.evariables$distanceToPermanentWaterWeighted[is.na(retrieved.evariables$distanceToPermanentWaterWeighted)]<-0
retrieved.evariables$elevation[is.na(retrieved.evariables$elevation)]<-0
antechinusdatapop$distanceTowater <- retrieved.evariables$distanceToPermanentWaterWeighted
antechinusdatapop$elevation <- retrieved.evariables$elevation
gdfantepop <- geomorph.data.frame(coords = gpaallpop$coords, Csize = gpaallpop$Csize, Species = antechinusdatapop$Species, Population = antechinusdatapop$Population, ID = antechinusdatapop$ID, Sex = antechinusdatapop$Sex, Latitude = antechinusdatapop$Latitude, Longitude = antechinusdatapop$Longitude, Altitude = antechinusdatapop$Altitude, Dat_coll = antechinusdatapop$Date.collected, Collection = antechinusdatapop$Collection,
ppworldclim = dfwtemppop$Prec, tempworldclim = dfwtemppop$Temp, Age = antechinusdatapop$Age, doubt = antechinusdatapop$doubt, distanceTowater = antechinusdatapop$distanceTowater, elevation = antechinusdatapop$elevation)
PCAantepop <- plotTangentSpace(gdfantepop$coords, warpgrids = TRUE, mesh = TRUE, groups = gdfantepop$Population, legend = gdfantepop$Population)
summary(PCAantepop)
PCAantepop <- plotTangentSpace(gdfantepop$coords, warpgrids = TRUE, mesh = TRUE, groups = gdfantepop$Population, legend = gdfantepop$Population)
PCAantepop <- plotTangentSpace(gdfantepop$coords, warpgrids = TRUE, mesh = TRUE, groups = gdfantepop$Population, legend = gdfantepop$Population)
PCAantepop <- plotTangentSpace(gdfantepop$coords, warpgrids = TRUE, mesh = FALSE, groups = gdfantepop$Population, legend = gdfantepop$Population)
PCAantepop <- plotTangentSpace(gdfantepop$coords, warpgrids = FALSE, mesh = FALSE, groups = gdfantepop$Population, legend = gdfantepop$Population)
PCAantepop <- plotTangentSpace(gdfantepop$coords, warpgrids = FALSE, mesh = FALSE, groups = gdfantepop$Population, legend = gdfantepop$Population)
summary(PCAantepop)
Populationpop <- gdfantepop$Population
Sexpop <- gdfantepop$Sex
dataPCApop <- data.frame(PCAantepop$pc.scores[,1], PCAantepop$pc.scores[,2], Populationpop, Sexpop)
plotPCApop <- ggplot(dataPCApop, aes(x=PCAantepop.pc.scores...1., y=PCAantepop.pc.scores...2., colour = Populationpop, shape = Sexpop)) +
labs(x = "PC 1 (22.87%)", y = "PC 2 (8.93%)") +
scale_color_manual(values = c("red", "blue", "darkgreen")) +
geom_point(size = 8, alpha = 0.8) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.text = element_text(size = 25), legend.title = element_text(size = 25), axis.title.x = element_text(size = 25), axis.title.y = element_text(size = 25), axis.text = element_text(size = 20), legend.justification = "center")
plot(plotPCApop)
gparespop<-gpagen(allom_resplusconsensuspop, curves = NULL, surfaces = NULL, PrinAxes = TRUE,
max.iter = NULL, ProcD = TRUE, Proj = TRUE, print.progress = TRUE)
gdfresantepop <- geomorph.data.frame(coords = gparespop$coords, Csize = gparespop$Csize, Species = antechinusdatapop$Species, Population = antechinusdatapop$Population, ID = antechinusdatapop$ID, Sex = antechinusdatapop$Sex, Latitude = antechinusdatapop$Latitude, Longitude = antechinusdatapop$Longitude, Altitude = antechinusdatapop$Altitude, Dat_coll = antechinusdatapop$Date.collected, Collection = antechinusdatapop$Collection,
ppworldclim = dfwtemppop$Prec, tempworldclim = dfwtemppop$Temp, Age = antechinusdatapop$Age, doubt = antechinusdatapop$doubt, distanceTowater = antechinusdatapop$distanceTowater, elevation = antechinusdatapop$elevation)
dim(antechinusdatapop)
dim(allom_resplusconsensuspop)
#Import 3D coordinates from all specimens
coords.3D <- t (read.csv("C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/Antechinus_LMcoords.csv", header = TRUE, row.names = 1))
dim(coords.3D)
#Convert 2D metadata into a 3D array
A <- arrayspecs(coords.3D, 82, 3)
dim(A)
Ahead <- head(dimnames(A))[3]
#Load the classifier
antechinusdata <- read.csv("C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/Antechinus_data.csv", header=T)
dim(antechinusdata)
Data.species <- antechinusdata$Species
is.factor(Data.species) # check that it is a factor
#give museum ID row names to quolls data
rownames(antechinusdata)<-antechinusdata$ID
####Rearrange coordinate names and classifier file names in the same order
names_array <- dimnames(A)[[3]]
names_classifier <- rownames(antechinusdata)
match(names_array, names_classifier)
A_reorder <- A[,,match(names_classifier, names_array)]
names_Areorder <- dimnames(A_reorder)[[3]]
match(names_Areorder, names_classifier)
#CLEANED VERY ROUGHLY, RECHECK SPECIMENS THAT CAN BE INCLUDED IN THE ANALYSIS
A_reorder <- A_reorder[,,-c(which(antechinusdata$Age=="Juvenile?"), which(antechinusdata$Population=="adustus?"), which(antechinusdata$Population=="agilis?"), which(antechinusdata$ID=="CM3642"))]
antechinusdata <- antechinusdata[-c(which(antechinusdata$Age=="Juvenile?"), which(antechinusdata$Population=="adustus?"), which(antechinusdata$Population=="agilis?"), which(antechinusdata$ID=="CM3642")),]
antechinusdata <- droplevels(antechinusdata)
#####DO THAT######
gpaall<-gpagen(A_reorder, curves = NULL, surfaces = NULL, PrinAxes = TRUE,
max.iter = NULL, ProcD = TRUE, Proj = TRUE, print.progress = TRUE)
#include precipitation and temperature data from worldclim
rclim<- getData("worldclim",var="bio",res=10) #run in console
rclim <- rclim[[c(1,12)]]
names(rclim) <- c("Temp","Prec")
lons <- antechinusdata$Longitude
lats <- antechinusdata$Latitude
coordsgps <- data.frame(lons, lats)
valuestemp <- extract(rclim,coordsgps)
dfwtemp <- cbind.data.frame(coordsgps,valuestemp)
dfwtemp
#frame data for geomorph
gdfante <- geomorph.data.frame(gpaall, Species = antechinusdata$Species, Population = antechinusdata$Population, ID = antechinusdata$ID, Sex = antechinusdata$Sex, Latitude = antechinusdata$Latitude, Longitude = antechinusdata$Longitude, Altitude = antechinusdata$Altitude, Dat_coll = antechinusdata$Date.collected, Collection = antechinusdata$Collection,
tempworldclim = dfwtemp$Prec, tempworldclim = dfwtemp$Temp, Age = antechinusdata$Age, doubt = antechinusdata$doubt)
A_reorderpop <- A_reorder[,,-c(which(antechinusdata$Population=="?"), which(antechinusdata$Population=="subtropicus holotype"))]
antechinusdatapop <- antechinusdata[-c(which(antechinusdata$Population=="?"), which(antechinusdata$Population=="subtropicus holotype")),]
antechinusdatapop <- droplevels(antechinusdatapop)
gpaallpop<-gpagen(A_reorderpop, curves = NULL, surfaces = NULL, PrinAxes = TRUE,
max.iter = NULL, ProcD = TRUE, Proj = TRUE, print.progress = TRUE)
rclim<- getData("worldclim",var="bio",res=10) #run in console
rclimpop <- rclim[[c(1,12)]]
names(rclimpop) <- c("Temp","Prec")
lonspop <- antechinusdatapop$Longitude
latspop <- antechinusdatapop$Latitude
coordsgpspop <- data.frame(lonspop, latspop)
valuestemppop <- extract(rclimpop,coordsgpspop)
dfwtemppop <- cbind.data.frame(coordsgpspop,valuestemppop)
dfwtemppop
antegps <- data.frame(antechinusdatapop$Latitude, antechinusdatapop$Longitude)
evariables <- c("el830", "el674")
retrieved.evariables <- intersect_points(antegps, evariables)
retrieved.evariables$distanceToPermanentWaterWeighted[is.na(retrieved.evariables$distanceToPermanentWaterWeighted)]<-0
retrieved.evariables$elevation[is.na(retrieved.evariables$elevation)]<-0
antechinusdatapop$distanceTowater <- retrieved.evariables$distanceToPermanentWaterWeighted
antechinusdatapop$elevation <- retrieved.evariables$elevation
gdfantepop <- geomorph.data.frame(coords = gpaallpop$coords, Csize = gpaallpop$Csize, Species = antechinusdatapop$Species, Population = antechinusdatapop$Population, ID = antechinusdatapop$ID, Sex = antechinusdatapop$Sex, Latitude = antechinusdatapop$Latitude, Longitude = antechinusdatapop$Longitude, Altitude = antechinusdatapop$Altitude, Dat_coll = antechinusdatapop$Date.collected, Collection = antechinusdatapop$Collection,
ppworldclim = dfwtemppop$Prec, tempworldclim = dfwtemppop$Temp, Age = antechinusdatapop$Age, doubt = antechinusdatapop$doubt, distanceTowater = antechinusdatapop$distanceTowater, elevation = antechinusdatapop$elevation)
PCAantepop <- plotTangentSpace(gdfantepop$coords, warpgrids = FALSE, mesh = FALSE, groups = gdfantepop$Population, legend = gdfantepop$Population)
summary(PCAantepop)
Populationpop <- gdfantepop$Population
Sexpop <- gdfantepop$Sex
dataPCApop <- data.frame(PCAantepop$pc.scores[,1], PCAantepop$pc.scores[,2], Populationpop, Sexpop)
plotPCApop <- ggplot(dataPCApop, aes(x=PCAantepop.pc.scores...1., y=PCAantepop.pc.scores...2., colour = Populationpop, shape = Sexpop)) +
labs(x = "PC 1 (22.87%)", y = "PC 2 (8.93%)") +
scale_color_manual(values = c("red", "blue", "darkgreen")) +
geom_point(size = 8, alpha = 0.8) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.text = element_text(size = 25), legend.title = element_text(size = 25), axis.title.x = element_text(size = 25), axis.title.y = element_text(size = 25), axis.text = element_text(size = 20), legend.justification = "center")
plot(plotPCApop)
plot(plotPCApop)
dim(antechinusdatapop)
fit.size <- procD.lm(f1 = coords~Csize, data = gdfante, print.progress = FALSE)
main_residuals3D <- arrayspecs(fit.size$residuals, 82, 3)
dim(main_residuals3D)
allom_resplusconsensus <- main_residuals3D + array(gpaall$consensus,dim(main_residuals3D))
dim(allom_resplusconsensus)
allom_resplusconsensuspop <- allom_resplusconsensus[,,-c(which(antechinusdata$Population=="?"), which(antechinusdata$Population=="subtropicus holotype"))]
dim(allom_resplusconsensuspop)
gparespop<-gpagen(allom_resplusconsensuspop, curves = NULL, surfaces = NULL, PrinAxes = TRUE,
max.iter = NULL, ProcD = TRUE, Proj = TRUE, print.progress = TRUE)
gdfresantepop <- geomorph.data.frame(coords = gparespop$coords, Csize = gparespop$Csize, Species = antechinusdatapop$Species, Population = antechinusdatapop$Population, ID = antechinusdatapop$ID, Sex = antechinusdatapop$Sex, Latitude = antechinusdatapop$Latitude, Longitude = antechinusdatapop$Longitude, Altitude = antechinusdatapop$Altitude, Dat_coll = antechinusdatapop$Date.collected, Collection = antechinusdatapop$Collection,
ppworldclim = dfwtemppop$Prec, tempworldclim = dfwtemppop$Temp, Age = antechinusdatapop$Age, doubt = antechinusdatapop$doubt, distanceTowater = antechinusdatapop$distanceTowater, elevation = antechinusdatapop$elevation)
PCAresantepop <- plotTangentSpace(gdfresantepop$coords, warpgrids = TRUE, mesh = TRUE, groups = gdfresantepop$Population, legend = gdfresantepop$Population)
PCAresantepop <- plotTangentSpace(gdfresantepop$coords, warpgrids = FALSE, mesh = FALSE, groups = gdfresantepop$Population, legend = gdfresantepop$Population)
summary(PCAresantepop)
Populationpop <- gdfantepop$Population
Sexpop <- gdfantepop$Sex
dataPCArespop <- data.frame(PCAresantepop$pc.scores[,1], PCAresantepop$pc.scores[,2], Populationpop, Sexpop)
plotPCArespop <- ggplot(dataPCArespop, aes(x=PCAresantepop.pc.scores...1., y=PCAresantepop.pc.scores...2., colour = Populationpop, shape = Sexpop)) +
labs(x = "PC 1 (22.87%)", y = "PC 2 (8.93%)") +
scale_color_manual(values = c("red", "blue", "darkgreen")) +
geom_point(size = 8, alpha = 0.8) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.text = element_text(size = 25), legend.title = element_text(size = 25), axis.title.x = element_text(size = 25), axis.title.y = element_text(size = 25), axis.text = element_text(size = 20), legend.justification = "center")
plot(plotPCArespop)
plot(plotPCArespop)
plotPCArespop <- ggplot(dataPCArespop, aes(x=PCAresantepop.pc.scores...1., y=PCAresantepop.pc.scores...2., colour = Populationpop, shape = Sexpop)) +
labs(x = "PC 1 (16.08%)", y = "PC 2 (8.62%)") +
scale_color_manual(values = c("red", "blue", "darkgreen")) +
geom_point(size = 8, alpha = 0.8) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.text = element_text(size = 25), legend.title = element_text(size = 25), axis.title.x = element_text(size = 25), axis.title.y = element_text(size = 25), axis.text = element_text(size = 20), legend.justification = "center")
plot(plotPCArespop)
plot(plotPCArespop)
plotOutliers(gdfresantepop$coords)
plotOutliers(gdfresantepop$coords, groups = gdfresantepop$Population)
fitpopres <- procD.lm(coords~Population, data = gdfresantepop, iter = 999, effect.type = "F")
anova(fitpopres)
PWpopres <- pairwise(fitpopres, groups = gdfresantepop$Population)
PWpopres.sum <- summary(PWpopres, test.type = "dist", confidence = 0.95, stat.table = FALSE)
PWpopres.sum
disparitypopsres <- morphol.disparity(fitpopres, groups = ~ Population, data = gdfresantepop, iter = 999)
summary(disparitypopsres)
northrescoords <- gdfresantepop$coords[,,which(gdfresantepop$Population=="north")]
mshapenorthres <- mshape(northrescoords)
southrescoords <- gdfresantepop$coords[,,which(gdfresantepop$Population=="south")]
mshapesouthres <- mshape(southrescoords)
subtropicusrescoords <- gdfresantepop$coords[,,which(gdfresantepop$Population=="subtropicus")]
mshapesubtropicusres <- mshape(subtropicusrescoords)
mshaperesnorthsubtropicus <- coordinates.difference(mshapenorthres, mshapesubtropicusres, type = "spherical")
if(!require(devtools)) install.packages("devtools")
library(devtools)
devtools::install_github("TGuillerme/landvR")
library(landvR)
mshaperesnorthsubtropicus <- coordinates.difference(mshapenorthres, mshapesubtropicusres, type = "spherical")
mshaperessouthsubtropicus <- coordinates.difference(mshapesouthres, mshapesubtropicusres, type = "spherical")
mshaperesnorthsouth <- coordinates.difference(mshapenorthres, mshapesouthres, type = "spherical")
procrustes.var.plot(mshapenorthres, mshapesubtropicusres, col = list(grDevices::heat.colors, "black"), pt.size = 0.5, col.val = mshaperesnorthsubtropicus[[1]][,"radius"])
procrustes.var.plot(mshapenorthres, mshapesubtropicusres, col = list(grDevices::heat.colors, "black"), pt.size = 0.5, col.val = mshaperesnorthsubtropicus[[1]][,"radius"])
procrustes.var.plot(mshapesouthres, mshapesubtropicusres, col = list(grDevices::heat.colors, "black"), pt.size = 0.5, col.val = mshaperessouthsubtropicus[[1]][,"radius"])
procrustes.var.plot(mshapenorthres, mshapesouthres, col = list(grDevices::heat.colors, "black"), pt.size = 0.5, col.val = mshaperesnorthsouth[[1]][,"radius"])
mshaperessouthnorth <- coordinates.difference(mshapesouthres, mshapenorthres, type = "spherical")
mshaperesnorthsubtropicus <- coordinates.difference(mshapenorthres, mshapesubtropicusres, type = "spherical")
mshaperessouthsubtropicus <- coordinates.difference(mshapesouthres, mshapesubtropicusres, type = "spherical")
procrustes.var.plot(mshapesouthres, mshapenorthres, col = list(grDevices::heat.colors, "black"), pt.size = 0.5, col.val = mshaperessouthnorth[[1]][,"radius"])
procrustes.var.plot(mshapenorthres, mshapesubtropicusres, col = list(grDevices::heat.colors, "black"), pt.size = 0.5, col.val = mshaperesnorthsubtropicus[[1]][,"radius"])
procrustes.var.plot(mshapesouthres, mshapesubtropicusres, col = list(grDevices::heat.colors, "black"), pt.size = 0.5, col.val = mshaperessouthsubtropicus[[1]][,"radius"])
procrustes.var.plot(mshapesouthres, mshapesubtropicusres, col = list(grDevices::heat.colors, "black"), pt.size = 0.5, col.val = mshaperessouthsubtropicus[[1]][,"radius"])
