Folder <- "C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest"
list.files(Folder)
Plylist <- sub(".ply", "", list.files(Folder))
matching <- match(dimnames(antestspecs)[[3]],Plylist)
matching
dimnames(antestspecs)[[3]]
data <-antestspecs[, , for_patch_placing]
matching <- match(dimnames(antestspecs)[[3]],Plylist)
for_patch_placing <-which (!is.na(matching)==TRUE)
data <-antestspecs[, , for_patch_placing]
#Make an array that includes only the specimens you have in your folder
data <-antestspecs[, , for_patch_placing]
dimnames(data)[[3]]
Patched <- placePatch(Atlas, data, path = Folder, inflate = 5)
Patched <- placePatch(template.1, data, path = Folder, inflate = 5)
attributes(data)
Patched <- placePatch(template.1, data, path = Folder, inflate = 5)
plotAtlas(template.1,pt.size=0.2,legend=FALSE,render="s")
Patched <- placePatch(template.1, as.matrix(data), path = Folder, inflate = 5)
patched
dim(patched)
attributes(data)
data[,,3]
lmplacement<-placePatch(template.1,data,path=Folder,
inflate=5)
lmplacement<-placePatch(template.1,data,path=Folder,
inflate=5)
dim(data)
datatest<-data[1:82,,]
dim(datatest)
lmplacement<-placePatch(template.1,datatest,path=Folder,
inflate=5)
lmplacement<-placePatch(template.1,datatest,path=Folder,
inflate=5)
datatest
data[,,3]
datatest[,,3]
datatest
lmplacement<-placePatch(template.1,datatest,path=Folder,
inflate=5)
attributes(datatest)
class(datatest)
matdata<-as.matrix(datatest)
class(matdata)
lmplacement<-placePatch(template.1,matdata,path=Folder,
inflate=5)
datatest[,,3]
lmplacement<-placePatch(template.1,datatest,path=Folder,
inflate=5)
attributes(datatest)
lmplacement<-placePatch(template.1,antestspecs,path=Folder,
inflate=5)
attributes(antestspecs)
attributes(datatest)
lmplacement<-placePatch(template.1,antestspecs [1:82,,],path=Folder,
inflate=5)
lmplacement<-placePatch(template.1,antestspecs [c(1:82),,],path=Folder,
inflate=5)
antestspecs [c(1:82),3,]
datatest[,,3]
antestspecs [c(1:82),,]
datatest[,,3]
datatest<-as.numeric(data[1:82,,])
datatest
lmplacement<-placePatch(template.1,as.numeric(datatest),path=Folder,
inflate=5)
as.numeric(datatest)
## Not run:
data(nose)
require(rgl)
###create mesh for longnose
longnose.mesh <- tps3d(shortnose.mesh,shortnose.lm,longnose.lm,threads=1)
## create atlas
fix <- c(1:5,20:21)
atlas <- createAtlas(shortnose.mesh, landmarks =
shortnose.lm[fix,], patch=shortnose.lm[-c(1:5,20:21),])
## view atlas
plotAtlas(atlas)
## create landmark array with only fix landmarks
data <- bindArr(shortnose.lm[fix,], longnose.lm[fix,], along=3)
dimnames(data)[[3]] <- c("shortnose", "longnose")
### write meshes to disk
mesh2ply(shortnose.mesh, filename="shortnose")
mesh2ply(longnose.mesh, filename="longnose")
patched <- placePatch(atlas, data, path="./", inflate=5)
data
as.matrix(datatest)
knitr::opts_knit$set(root.dir = 'C:/Users/pietro/Desktop/Pietro/Specimens', echo = TRUE)
#load libraries
library(ggplot2)
library(digest)
library(rgl)
library(geomorph)
library(vegan) # vegan version 2.4-4
library(Morpho)
library(ape)
library(raster)
library(sp)
library(MASS)
library(RColorBrewer)
library(shapes)
library(wesanderson)
library(magick)
gridpars=gridPar(pt.size=0.5, pt.bg="pink")
colswes <- wes_palette("Darjeeling1")
names(colswes) <- levels(gdfhallucatusminusisland$Population ) # assign levels to colours
col.gp <- colswes[match(gdfhallucatusminusisland$Population, names(colswes))] # magic!
head(col.gp) # see the result
Ahead <- head(dimnames(A))[3]
Ahead
#Convert 2D metadata into a 3D array
A <- arrayspecs(coords.3D, 900, 3)
dim(A)
Ahead <- head(dimnames(A))[3]
A
subtropicus.p<-t(read.csv('LMcoordstest.csv', header = TRUE))
dim(subtropicus.p)
A <- arrayspecs(subtropicus.p, 412, 3)
dim(A)
Ahead <- head(dimnames(A))[3]
A
subtropicus.holo<-file2mesh('3Dmodels/Asubtropicus/J17407.ply',readcol=F,clean=T)
subtropicus.p<-t(read.csv('LMcoordstest.csv', header = TRUE))
dim(subtropicus.p)
A <- arrayspecs(subtropicus.p, 412, 3)
dim(A)
Ahead <- head(dimnames(A))[3]
template.p<-A[,,1]
antestspecs<-A[,,2:5]
A
antestspecs
fixed<-template.p[146:227,]
patch<-template.p[c(1:145,228:412),]
template.1<-createAtlas(subtropicus.holo,landmarks=fixed,patch=patch,
patchCurves = list(as.integer(c(228:235),c(236:238),c(239:241),c(242:244),c(245:246),c(247:248),c(249:253),c(254:258),c(259:263),
264,c(265:269),270,c(271:274),c(275:278),
c(279:281),c(282:284),c(285:287),c(288:290),c(291:293),
c(294:296),c(297:298),c(299:300),c(301:304),c(305:308),c(309:310),c(311:312),
313,314,315,316,317,318,319,
c(320:324),325,c(326:329),c(330:333),c(334:335),c(336:337),c(338:342),
c(343:347),c(348:349),c(350:351),c(352:353),c(354:356),c(357:359),c(360:361),c(362:364),c(365:367),
c(368:370),c(371:373),c(374:376),c(377:379),c(380:382),c(383:385),386,c(387:389),c(390:392),
c(393:396),c(397:400),c(401:403),c(404:411),412)))
plotAtlas(template.1,pt.size=0.2,legend=FALSE,render="s")
#The below is code to take out a small subsample of the whole 3d array
Folder <- "C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest"
#Make an array that includes only the specimens you have in your folder
data <-antestspecs[, , for_patch_placing]
dimnames(data)[[3]]
datatest<-data[1:82,,]
datatest
lmplacement<-placePatch(template.1,as.numeric(datatest),path=Folder,
inflate=5)
lmplacement<-placePatch(template.1,as.numeric(datatest),path=Folder,
inflate=5)
lmplacement<-placePatch(template.1,datatest,path=Folder,
inflate=5)
lmplacement<-placePatch(template.1,datatest,path=Folder,
inflate=5)
mfrow3d(4,3,sharedMouse = T)
checkLM(Patched, path = Folder, atlas=template.1)
checkLM(lmplacement, path = Folder, atlas=template.1)
mfrow3d()/checkLM()
?checkLM
attributes(lmplacement)
checkLM(lmplacement, path = Folder, atlas=template.1)
folder
Folder
checkLM(lmplacement, path = Folder, atlas=template.1)
The below is code to take out a small subsample of the whole 3d array
Folder <- "C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/"
#Navigate to folder with the subsample of ply files
Plylist <- sub(".ply", "", list.files(Folder))
#extract the coordinates that correspond to the ply files - note the dimnames and the ply file names need to be identical
matching <- match(dimnames(antestspecs)[[3]],Plylist)
for_patch_placing <-which (!is.na(matching)==TRUE)
#Make an array that includes only the specimens you have in your folder
data <-antestspecs[, , for_patch_placing]
dimnames(data)[[3]]
datatest<-data[1:82,,]
lmplacement<-placePatch(template.1,datatest,path=Folder,
inflate=5)
checkLM(lmplacement, path = Folder, atlas=template.1)
?createAtlas
checkLM(lmplacement, path = Folder, atlas=template.1)
684/3
438/3
template.1<-createAtlas(subtropicus.holo,landmarks=fixed,patch=patch,
patchCurves = list(as.integer(c(150,228:235,146))))
plotAtlas(template.1,pt.size=0.2,legend=FALSE,render="s")
plotAtlas(template.1,pt.size=0.2,legend=FALSE,render="s")
template.1<-createAtlas(subtropicus.holo,landmarks=fixed,patch=patch,
patchCurves = list(as.integer(c(150,228:235,146))))
plotAtlas(template.1,pt.size=0.2,legend=FALSE,render="s")
#The below is code to take out a small subsample of the whole 3d array
Folder <- "C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/"
#Make an array that includes only the specimens you have in your folder
data <-antestspecs[, , for_patch_placing]
dimnames(data)[[3]]
datatest<-data[1:82,,]
lmplacement<-placePatch(template.1,datatest,path=Folder,
inflate=5)
lmplacement<-placePatch(template.1,datatest,path=Folder,
inflate=5)
checkLM(lmplacement, path = Folder, atlas=template.1)
datatest
library(Morpho)
library(rgl)
library(Rvcg)
library(geomorph)
setwd('C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data')
subtropicus.holo<-file2mesh('3Dmodels/Asubtropicus/J17407.ply',readcol=F,clean=T)
subtropicus.p<-t(read.csv('LMcoordstest.csv', header = TRUE))
dim(subtropicus.p)
A <- arrayspecs(subtropicus.p, 412, 3)
dim(A)
Ahead <- head(dimnames(A))[3]
template.p<-A[,,1]
template.p<-A[,,1]
antestspecs<-A[,,2:5]
shade3d(subtropicus.holo,col=8)
spheres3d(template.p[146:227,],radius=0.3,col=1)#fixed. nb of landmark = (z-1)/3
spheres3d(template.p[228:412,],radius=0.2,col=2) #curves
spheres3d(template.p[1:145,],radius=0.1,col=3) #patches
fixed<-template.p[146:227,]
patch<-template.p[c(1:145,228:412),]
template.1<-createAtlas(subtropicus.holo,landmarks=fixed,patch=patch,
patchCurves = list(as.integer(c(150,228:235,146))))
plotAtlas(template.1,pt.size=0.2,legend=FALSE,render="s")
plotAtlas(template.1,pt.size=0.2,legend=FALSE,render="s")
#Make an array that includes only the specimens you have in your folder
data <-antestspecs[, , for_patch_placing]
#The below is code to take out a small subsample of the whole 3d array
Folder <- "C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/"
#Navigate to folder with the subsample of ply files
Plylist <- sub(".ply", "", list.files(Folder))
matching <- match(dimnames(antestspecs)[[3]],Plylist)
for_patch_placing <-which (!is.na(matching)==TRUE)
#Make an array that includes only the specimens you have in your folder
data <-antestspecs[, , for_patch_placing]
dimnames(data)[[3]]
datatest<-data[1:82,,]
lmplacement<-placePatch(template.1,datatest,path=Folder,
inflate=5)
checkLM(lmplacement, path = Folder, atlas=template.1)
spheres3d(template.p[146:227,],radius=0.3,col=1)#fixed. nb of landmark = (z-1)/3
spheres3d(template.p[228:412,],radius=0.2,col=2) #curves
spheres3d(template.p[1:145,],radius=0.1,col=3) #patches
fixed<-template.p[146:227,]
patch<-template.p[c(1:145,228:412),]
template.1<-createAtlas(subtropicus.holo,landmarks=fixed,patch=patch,
patchCurves = list(as.integer(c(150,228:235,146))))
plotAtlas(template.1,pt.size=0.2,legend=FALSE,render="s")
lmplacement<-placePatch(template.1,datatest,path=Folder,
inflate=5)
checkLM(lmplacement, path = Folder, atlas=template.1)
?plotAtlas
checkLM(lmplacement, path = Folder, atlas=template.1)
checkLM(lmplacement, path = Folder, atlas=template.1)
lmplacement<-placePatch(template.1,datatest,path=Folder,
inflate=5)
lmplacement<-placePatch(template.1,datatest,path=Folder,
inflate=2)
?text3d
shade3d(subtropicus.holo,col=8)
spheres3d(template.p[146:227,],radius=0.3,col=1)#fixed. nb of landmark = (z-1)/3
spheres3d(template.p[228:412,],radius=0.2,col=2) #curves
spheres3d(template.p[1:145,],radius=0.1,col=3) #patches
text3d(template.p, texts = c(1:412), asp=FALSE, cex=3, col="blue", pos = 3 )
shade3d(subtropicus.holo,col=8)
spheres3d(template.p[146:227,],radius=0.3,col=1)#fixed. nb of landmark = (z-1)/3
spheres3d(template.p[228:412,],radius=0.2,col=2) #curves
spheres3d(template.p[1:145,],radius=0.1,col=3) #patches
text3d(template.p, texts = c(1:412), asp=FALSE, cex=1, col="blue", pos = 3 )
checkLM(lmplacement, path = Folder, atlas=template.1)
inflate=2)
#Make an array that includes only the specimens you have in your folder
data <-antestspecs[, , for_patch_placing]
dimnames(data)[[3]]
datatest<-data[1:82,,]
lmplacement<-placePatch(template.1,datatest,path=Folder,
inflate=3)
checkLM(lmplacement, path = Folder, atlas=template.1)
spheres3d(template.p[1:145,],radius=0.1,col=3) #patches
shade3d(subtropicus.holo,col=8)
spheres3d(template.p[146:227,],radius=0.3,col=1)#fixed. nb of landmark = (z-1)/3
spheres3d(template.p[228:412,],radius=0.2,col=2) #curves
spheres3d(template.p[1:145,],radius=0.1,col=3) #patches
template.1<-createAtlas(subtropicus.holo,landmarks=fixed,patch=patch,
patchCurves = list(as.integer(c(150,228:235,146))))
plotAtlas(template.1,pt.size=0.2,legend=FALSE,render="s", cols[1]=landmarks)
plotAtlas(template.1,pt.size=0.2,legend=FALSE,render="s")
plotAtlas(template.1,pt.size=0.2,legend=FALSE,render="s")
text3d(template.1, texts = c(1:412), asp=FALSE, cex=1, col="blue", pos = 3 )
plotAtlas(template.1,pt.size=0.2,legend=FALSE,render="s")
text3d(template.1, texts = c(1:412), asp=FALSE, cex=1, col="blue", pos = 3 )
plotAtlas(template.1,pt.size=0.2,legend=FALSE,render="s")
text3d(template.p, texts = c(1:412), asp=FALSE, cex=1, col="blue", pos = 3 )
plotAtlas(template.1,pt.size=0.2,legend=FALSE,render="s")
text3d(template.p, texts = c(1:412), asp=FALSE, cex=2, col="blue", pos = 3 )
Atlas<-createAtlas(subtropicus.holo,landmarks=fixed,patch=patch,
patchCurves = list(as.integer(c(150,228:235,146))))
plotAtlas(Atlas,pt.size=0.2,legend=FALSE,render="s")
#This places the numbers of the landmarks as per the Atlas
text3d(Atlas, texts = c(1:412), asp=FALSE, cex=2, col="blue", pos = 3 )
open3d()
plotAtlas(Atlas,pt.size=0.2,legend=FALSE,render="s")
#This places the numbers of the landmarks as per the Atlas
text3d(Atlas, texts = c(1:412), asp=FALSE, cex=2, col="blue", pos = 3 )
attributes(atlas)
attributes(Atlas)
plotAtlas(Atlas,pt.size=0.2,legend=FALSE,render="s")
plotAtlas(Atlas,pt.size=0.2,legend=FALSE,render="s")
#This places the numbers of the landmarks as per the Atlas
text3d(Atlas, texts = c(1:412), asp=FALSE, cex=2, col="blue", pos = 3 )
open3d()
plotAtlas(Atlas,pt.size=0.2,legend=FALSE,render="s")
#This places the numbers of the landmarks as per the Atlas
text3d(template.1, texts = c(1:412), asp=FALSE, cex=2, col="blue", pos = 3 )
open3d()
plotAtlas(Atlas,pt.size=0.2,legend=FALSE,render="s")
#This places the numbers of the landmarks as per the Atlas
text3d(template.p, texts = c(1:412), asp=FALSE, cex=2, col="blue", pos = 3 )
checkLM(lmplacement, path = Folder, atlas=template.1)
attributes(lmplacing)
lmplacement
dimnames(lmplacement[,,1])
dimnames(lmplacement[,,])
testmesh <- file2mesh('3Dmodels/Asubtropicus/JM213.ply',readcol=F,clean=T)
open3d()
shade3d(testmesh)
?shade3d
testmesh <- file2mesh('3Dmodels/Asubtropicus/JM213.ply',readcol=T,clean=T)
open3d()
shade3d(testmesh, )
open3d()
shade3d(testmesh )
text3d(lmplacement[,,1], texts = c(1:412), asp=FALSE, cex=1, col="blue", pos = 3 )
open3d()
plotspec(testmesh )
?plotspec
open3d()
plotspec(testmesh, lmplacement[,,1] )
open3d()
plotspec(testmesh, lmplacement[,,1], ptsize = 0.1 )
text3d(lmplacement[,,1], texts = c(1:412), asp=FALSE, cex=1, col="blue", pos = 3 )
Atlas<-createAtlas(subtropicus.holo,landmarks=fixed,patch=patch,
patchCurves = list(as.integer(c(150,228:235,146))))
open3d()
plotAtlas(Atlas,pt.size=0.2,legend=FALSE,render="s")
#This places the numbers of the landmarks as per the Atlas
text3d(template.p, texts = c(1:412), asp=FALSE, cex=2, col="blue", pos = 3 )
testmesh <- file2mesh('3Dmodels/Asubtropicus/JM213.ply',readcol=T,clean=T)
open3d()
plotspec(testmesh, lmplacement[,,1], ptsize = 0.1  )
text3d(lmplacement[,,1], texts = c(1:412), asp=FALSE, cex=1, col="blue", pos = 3 )
Atlas$landmarks
Atlas$landmarks
Atlas$patch
library(Morpho)
library(rgl)
library(Rvcg)
A
library(Morpho)
library(rgl)
library(Rvcg)
library(geomorph)
setwd('C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data')
subtropicus.holo<-file2mesh('3Dmodels/Asubtropicus/J17407.ply',readcol=F,clean=T)
subtropicus.p<-t(read.csv('Templatecoords.csv', header = TRUE))
dim(subtropicus.p)
subtropicus.p<-t(read.csv('Templatecoords.csv', header = TRUE))
dim(subtropicus.p)
subtropicus.p
dim(subtropicus.p)
subtropicus.p[2,]
subtropicus.p<-t(read.csv('Templatecoords.csv', header = F))
dim(subtropicus.p)
t1<-as.matrix(subtropicus.p)
t1
t1[2,]
t1<-as.numeric(subtropicus.p)
t1
?read.csv
subtropicus.p<-t(read.csv('Templatecoords.csv', header = F, row.names = 1))
dim(subtropicus.p)
subtropicus.p
subtropicus.p[2,]
subtropicus.p[1,]
subtropicus.p<-t(read.csv('Templatecoords.csv', header = F))
dim(subtropicus.p)
subtropicus.p1 <- subtropicus.p[-1,]
subtropicus.p1
subtropicus.p<-t(read.csv('Templatecoords.csv', header = F, quote = ""))
dim(subtropicus.p)
subtropicus.p[,1]
subtropicus.p<-t(read.csv('Templatecoords.csv', header = F))
dim(subtropicus.p)
subtropicus.p[,1]
subtropicus.p1 <- as.matrix(subtropicus.p[-1,])
subtropicus.p1
subtropicus.p1 <- as.vector(subtropicus.p[-1,])
subtropicus.p1
subtropicus.p1 <- as.numeric(subtropicus.p[-1,])
subtropicus.p1
subtropicus.p<-t(read.csv('Templatecoords.csv', header = F, sep = ""))
dim(subtropicus.p)
subtropicus.p<-t(read.csv('Templatecoords.csv', header = F, sep = ""))
dim(subtropicus.p)
subtropicus.p
subtropicus.p<-t(read.csv('Templatecoords.csv', header = F))
dim(subtropicus.p)
subtropicus.p<-t(read.csv('Templatecoords.csv', header = F))
dim(subtropicus.p)
subtropicus.p<-t(read.csv('Templatecoords.csv', header = F, row.names = TRUE))
subtropicus.p<-t(read.csv('Templatecoords.csv', header = F, rownames = TRUE))
subtropicus.p<-t(read.csv('Templatecoords.csv', header = F, row.names = TRUE))
subtropicus.p<-t(read.csv('Templatecoords.csv', header = F))
dim(subtropicus.p)
head(subtropicus.p)
dimnames (subtropicus.p[1])
rownames(subtropicus.p) <- names (subtropicus.p[1])
rownames(subtropicus.p)
subtropicus.holo<-file2mesh('3Dmodels/Asubtropicus/J17407.ply',readcol=F,clean=T)
subtropicus.p<-t(read.csv('Templatecoords.csv', header = F))
subtropicus.holo<-file2mesh('3Dmodels/Asubtropicus/J17407.ply',readcol=F,clean=T)
subtropicus.p<-(read.csv('Templatecoords.csv', header = F))
subtropicus.p
attributes(subtropicus.p)
rownames(subtropicus.p)<-subtropicus.p$V1
subtropicus.p
subtropicus.p1 <- subtropicus.p[-1,]
subtropicus.p1
subtropicus.p<-(read.csv('Templatecoords.csv', header = F))
dim(subtropicus.p)
rownames(subtropicus.p)<-subtropicus.p$V1
subtropicus.p1 <- subtropicus.p[-1,]
subtropicus.p1
dim(subtropicus.p)
A <- arrayspecs(subtropicus.p, 412, 3)
?arrayspecs
subtropicus.p1 <- subtropicus.p[,-1]
subtropicus.p1
dim(subtropicus.p1)
dim(subtropicus.p)
subtropicus.p1[1,]
subtropicus.p[1,]
A <- arrayspecs(subtropicus.p1, 412, 3)
shade3d(subtropicus.holo,col=8)
spheres3d(subtropicus.p1[1:82,],radius=0.3,col=1)#fixed. nb of landmark = (z-1)/3
spheres3d(subtropicus.p1[83:267,],radius=0.2,col=2) #curves
spheres3d(template.p[268:412,],radius=0.1,col=3) #patches
spheres3d(subtropicus.p1[268:412,],radius=0.1,col=3) #patches
#A <- arrayspecs(subtropicus.p1, 412, 3)
#dim(A)
#Ahead <- head(dimnames(A))[3]
#template.p<-A[,,1]
#antestspecs<-A[,,2:5]
shade3d(subtropicus.holo,col=8)
spheres3d(subtropicus.p1[1:82,],radius=0.3,col=1)#fixed. nb of landmark = (z-1)/3
spheres3d(subtropicus.p1[83:267,],radius=0.2,col=2) #curves
spheres3d(subtropicus.p1[268:412,],radius=0.1,col=3) #patches
text3d(template.p, texts = c(1:412), asp=FALSE, cex=1, col="blue", pos = 3 )
text3d(subtropicus.p1, texts = c(1:412), asp=FALSE, cex=1, col="blue", pos = 3 )
fixed<-subtropicus.p1[1:82,]
patch<-subtropicus.p1[c(83:412),]
Atlas<-createAtlas(subtropicus.holo,landmarks=fixed,patch=patch,
patchCurves = list(as.integer(c(257:264))))
fixed
class(fixed)
fixed<-as.matrix(subtropicus.p1[1:82,])
class(fixed)
patch<-as.matrix(subtropicus.p1[c(83:412),])
Atlas<-createAtlas(subtropicus.holo,landmarks=fixed,patch=patch,
patchCurves = list(as.integer(c(257:264))))
open3d()
plotAtlas(Atlas,pt.size=0.2,legend=FALSE,render="s")
#This places the numbers of the landmarks as per the Atlas
text3d(subtropicus.p1, texts = c(1:412), asp=FALSE, cex=2, col="blue", pos = 3 )
LMcoords <- read.csv('Antechinus_cranialvariation_data.csv', header = T)
dim(LMcoords)
dim(LMcoords)
Ants <- arrayspecs(LMcoords, 412, 3)
LMcoords <- read.csv('Antechinus_cranialvariation_data.csv', header = T, row.names = 1)
dim(LMcoords)
Ants <- arrayspecs(LMcoords, 82, 3)
#Import 3D coordinates from all specimens
coords.3D <- t (read.csv("Data/LMcoords_Dhallucatus.csv", header = TRUE, row.names = 1))
dim(coords.3D)
#Convert 2D metadata into a 3D array
A <- arrayspecs(coords.3D, 900, 3)
LMcoords <- t(read.csv('Antechinus_cranialvariation_data.csv', header = T, row.names = 1))
dim(LMcoords)
Ants <- arrayspecs(LMcoords, 82, 3)
dim(A)
Ahead <- head(dimnames(A))[3]
#The below is code to take out a small subsample of the whole 3d array
Folder <- "C:/Users/pietro/Desktop/Pietro/Projects/Viacavaetal_Antechinus/Data/3Dmodels/AntechinusTest/"
#Navigate to folder with the subsample of ply files
Plylist <- sub(".ply", "", list.files(Folder))
matching <- match(dimnames(antestspecs)[[3]],Plylist)
matching <- match(dimnames(Ants)[[3]],Plylist)
for_patch_placing <-which (!is.na(matching)==TRUE)
#Make an array that includes only the specimens you have in your folder
data <-Ants[, , for_patch_placing]
dimnames(data)[[3]]
datatest<-data[1:82,,]
?placePatch
lmplacement<-placePatch(Atlas,datatest,path=Folder,
inflate=3)
checkLM(lmplacement, path = Folder, atlas=template.1)
checkLM(lmplacement, path = Folder, atlas=Atlas)
